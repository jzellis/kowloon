"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var l = Object.defineProperty;
var r = Object.getOwnPropertyDescriptor;
var d = Object.getOwnPropertyNames;
var s = Object.prototype.hasOwnProperty;
var o = function o(e, a) {
    for (var i in a) l(e, i, {
      get: a[i],
      enumerable: !0
    });
  },
  y = function y(e, a, i, t) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(d(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !s.call(e, n) && n !== i && l(e, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(t = r(a, n)) || t.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var A = function A(e) {
  return y(l({}, "__esModule", {
    value: !0
  }), e);
};
var u = {};
o(u, {
  "default": function _default() {
    return K;
  }
});
module.exports = A(u);
var K = ["Susan", "Monica", "Linda", "Elsa", "Margaret", "Lisa", "Karen", "Helen", "Sandra", "Sara", "Kimberly", "Angelique", "Melissa", "Brenda", "Anna", "Annelie", "Katryn", "Amanda", "Stefanie", "Marie", "Janet", "Rosemarie", "Nicoleen", "Paula", "Robin", "Rita", "Edna", "Carmen", "Cindy", "Edith", "Ethel", "Ellen", "Elaine", "Charlotte", "Pauline", "Juanita", "Anita", "Rhonda", "Hazel", "Debbie", "Clara", "Lucille", "Eleanor", "Alicia", "Michele", "Geraldine", "Erika", "Bernice", "Audrey", "Yvonne", "Annette", "Renette", "Ida", "Melanie", "Jolanda", "Vanessa", "Alma", "Sue-Marie", "Carla", "Rosemary", "Wilma", "Kristin", "Natalie", "Charlene", "Melinda", "Maureen", "Tanya", "Marlene", "Heidi", "Lydia", "Vickie", "Nina", "Leona", "Jenny", "Sonia", "Kristina", "Katrina", "Belinda", "Natasha", "Cecile", "Angie", "Lynda", "Amelia", "Monique", "Kayla", "Yvette", "Olivia", "Antoinette", "Bridgette", "Karla", "Leticia", "Krista", "Robyn", "Rosalie", "Bernadette", "Krystal", "Nadine", "Estelle", "Lynette", "Eloise", "Jana", "Kerry", "Jenna", "Tasha", "Sonja", "Elisa", "Kristie"];