"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var e = Object.defineProperty;
var o = Object.getOwnPropertyDescriptor;
var l = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var u = function u(i, a) {
    for (var r in a) e(i, r, {
      get: a[r],
      enumerable: !0
    });
  },
  s = function s(i, a, r, j) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(l(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !t.call(i, n) && n !== r && e(i, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(j = o(a, n)) || j.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return i;
  };
var d = function d(i) {
  return s(e({}, "__esModule", {
    value: !0
  }), i);
};
var v = {};
u(v, {
  "default": function _default() {
    return k;
  }
});
module.exports = d(v);
var k = ["Andora", "Apvienotie Ar\u0101bu Emir\u0101ti", "Afganist\u0101na", "Alb\u0101nija", "Arm\u0113nija", "Anti\u013Cas", "Angola", "Antarktika", "Argent\u012Bna", "Amerik\u0101\u0146u Samoa", "Austrija", "Austr\u0101lija", "Azerbaid\u017E\u0101na", "Bosnija un Hercegovina", "Barbadosa", "Banglade\u0161a", "Be\u013C\u0123ija", "Burkinafaso", "Bulg\u0101rija", "Bahreina", "Burundija", "Benina", "Bruneja", "Bol\u012Bvija", "Braz\u012Blija", "But\u0101na", "Buv\u0113 sala", "Botsv\u0101na", "Baltkrievija", "Beliza", "Kan\u0101da", "Kongo", "\u0160veice", "Kotdivu\u0101ra", "Kuka salas", "\u010C\u012Ble", "Kamer\u016Bna", "\u0136\u012Bna", "Kolumbija", "Kostarika", "Kuba", "Kaboverde", "Kipra", "\u010Cehija", "V\u0101cija", "D\u0101nija", "Dominika", "Al\u017E\u012Brija", "Ekvadora", "Igaunija", "\u0112\u0123ipte", "Sp\u0101nija", "Etiopija", "Somija", "Fid\u017Ei", "Francija", "Gabona", "Lielbrit\u0101nija", "Gren\u0101da", "Gruzija", "Gana", "Grenlande", "Gambija", "Gvineja", "Gvadelupa", "Grie\u0137ija", "Gvatemala", "Guama", "Gaj\u0101na", "Honkonga", "Hondurasa", "Horv\u0101tija", "Haiti", "Ung\u0101rija", "Indon\u0113zija", "\u012Arija", "Izra\u0113la", "Indija", "Ir\u0101ka", "Ir\u0101na", "Islande", "It\u0101lija", "Jamaika", "Jord\u0101nija", "Jap\u0101na", "Kenija", "Kirgizst\u0101na", "Kambod\u017Ea", "Korejas Tautas Demokr\u0101tisk\u0101 Republika", "Korejas Republika", "Kuveita", "Kaimanu salas", "Kazahst\u0101na", "Laosa", "Lib\u0101na", "Lihten\u0161teina", "\u0160rilanka", "Lib\u0113rija", "Lesoto", "Lietuva", "Luksemburga", "Latvija", "L\u012Bbija", "Maroka", "Monako", "Moldova", "Madagaskara", "Ma\u0137edonija", "Mali", "Mongolija", "Makao", "Martinika", "Maurit\u0101nija", "Montserrata", "Malta", "Maur\u012Bcija", "Mald\u012Bvija", "Mal\u0101vija", "Meksika", "Malaizija", "Mozambika", "Nam\u012Bbija", "Nig\u0113ra", "Nig\u0113rija", "Nikaragva", "N\u012Bderlande", "Norv\u0113\u0123ija", "Nep\u0101la", "Jaunz\u0113lande", "Om\u0101na", "Panama", "Peru", "Filip\u012Bnas", "Pakist\u0101na", "Polija", "Puertoriko", "Portug\u0101le", "Paragvaja", "Katara", "Rum\u0101nija", "Krievija", "Ruanda", "Sa\u016Bda Ar\u0101bija", "Sud\u0101na", "Zviedrija", "Singap\u016Bra", "Slov\u0113nija", "Slov\u0101kija", "Sjerraleone", "Sanmar\u012Bno", "Seneg\u0101la", "Som\u0101lija", "Surinama", "Salvadora", "S\u012Brija", "Svazilenda", "\u010Cada", "Togo", "Taizeme", "Tad\u017Eikist\u0101na", "Turkmenist\u0101na", "Tunisija", "Tonga", "Turcija", "Taiv\u0101na", "Tanz\u0101nija", "Ukraina", "Uganda", "Amerikas Savienot\u0101s Valstis", "Urugvaja", "Uzbekist\u0101na", "Venecu\u0113la", "Vjetnama", "Jemena", "Zambija", "Zimbabve"];