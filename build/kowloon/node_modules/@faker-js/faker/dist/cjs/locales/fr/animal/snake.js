"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var u = Object.defineProperty;
var l = Object.getOwnPropertyDescriptor;
var d = Object.getOwnPropertyNames;
var i = Object.prototype.hasOwnProperty;
var t = function t(a, e) {
    for (var o in e) u(a, o, {
      get: e[o],
      enumerable: !0
    });
  },
  s = function s(a, e, o, n) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(d(e)),
        _step;
      try {
        var _loop = function _loop() {
          var r = _step.value;
          !i.call(a, r) && r !== o && u(a, r, {
            get: function get() {
              return e[r];
            },
            enumerable: !(n = l(e, r)) || n.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var c = function c(a) {
  return s(u({}, "__esModule", {
    value: !0
  }), a);
};
var b = {};
t(b, {
  "default": function _default() {
    return C;
  }
});
module.exports = c(b);
var C = ["Alsophis ater", "Anaconda \xE0 taches sombres", "Anaconda bolivien", "Anaconda curiy\xFA", "Anaconda de Barbour", "Anaconda de Bolivie", "Anaconda de Deschauense", "Anaconda du Paraguay", "Anaconda g\xE9ant", "Anaconda jaune", "Anaconda vert", "Barba amarilla", "Boa", "Boa arboricole de Madagascar", "Boa arc-en-ciel", "Boa arc-en-ciel cubain", "Boa canin", "Boa caoutchouc", "Boa cubain", "Boa d'Amazonie", "Boa de Cuba", "Boa de Dum\xE9ril", "Boa de l'\xEEle Ronde", "Boa de l'\xEEle Ronde de Dussumier", "Boa de l'\xEEle Ronde de Schlegel", "Boa de la Jama\xEFque", "Boa de Madagascar", "Boa de Maurice", "Boa de Porto Rico", "Boa des for\xEAts", "Boa des for\xEAts de Madagascar", "Boa des perroquets", "Boa des sables", "Boa des sables d'Afrique", "Boa des savanes de Dum\xE9ril", "Boa devin", "Boa \xE9meraude", "Boa fouisseur de l'\xEEle Maurice", "Boa fouisseur de l'\xEEle Ronde", "Boa nain", "Boa sobre", "Boa terrestre de Madagascar", "Bongare", "Bongare annel\xE9", "Bongare candide", "Bongare fasci\xE9", "Bongare indien", "Bongare ray\xE9", "Boomslang", "Bungare", "Cinglard", "Cobra", "Cobra \xE0 lunettes", "Cobra \xE0 monocle", "Cobra chinois", "Cobra cracheur", "Cobra cracheur \xE0 cou noir", "Cobra cracheur du Mozambique", "Cobra cracheur \xE9quatorial", "Cobra cracheur indon\xE9sien", "Cobra cracheur rouge", "Cobra d'eau", "Cobra d'eau ray\xE9", "Cobra de mer", "Cobra des Philipines du Nord", "Cobra du Cap", "Cobra du Mozambique", "Cobra \xE9gyptien", "Cobra indien", "Cobra royal", "Coronelle", "Coronelle girondine", "Coronelle lisse", "Couleuvre", "Couleuvre \xE0 capuchon", "Couleuvre \xE0 collier", "Couleuvre \xE0 collier am\xE9ricaine", "Couleuvre \xE0 dos rouge", "Couleuvre \xE0 \xE9chelons", "Couleuvre \xE0 jarreti\xE8re de Santa Cruz", "Couleuvre \xE0 nez plat", "Couleuvre \xE0 nez retrouss\xE9", "Couleuvre \xE0 quatre raies", "Couleuvre \xE0 ventre rouge", "Couleuvre brune", "Couleuvre d'eau", "Couleuvre d'Esculape", "Couleuvre de Forsskal", "Couleuvre de l'Amour", "Couleuvre de l'Ouest", "Couleuvre de Montpellier", "Couleuvre des Plaines", "Couleuvre diad\xE8me", "Couleuvre du Nord-Ouest", "Couleuvre fauve de l'Est", "Couleuvre faux-corail", "Couleuvre l\xE9opard", "Couleuvre mauresque", "Couleuvre mince", "Couleuvre obscure", "Couleuvre ray\xE9e", "Couleuvre royale", "Couleuvre tachet\xE9e", "Couleuvre tessell\xE9e", "Couleuvre verte", "Couleuvre verte et jaune", "Couleuvre vip\xE9rine", "Couleuvre-jarreti\xE8re", "Couresse \xE0 ventre rouge", "Couresse du Banc d'Anguilla", "Crotale", "Crotale \xE0 losange", "Crotale cascabelle", "Crotale cent pas", "Crotale de l'ouest", "Crotale de Malaisie", "Crotale de Mojave", "Crotale des bambous", "Crotale des bois", "Crotale des prairies", "Crotale des tropiques", "Crotale diamantin", "Crotale diamantin de l'Ouest", "Crotale du temple", "Crotale du Texas", "Crotale du Venezuela", "Crotale muet", "Crotale tigr\xE9", "Cuatronarices", "Curiy\xFA", "\xC9chide", "\xC9chide \xE0 ventre blanc", "\xC9chide car\xE9n\xE9e", "\xC9chide des pyramides", "Faux-corail de Sinaloa", "Fer de lance", "Fer de lance centro-am\xE9ricain", "Fer de lance commun", "Fer de lance de la Martinique", "Grage grands carreaux", "Grand anaconda", "Grands carreaux", "Habu", "Habu d'Arisa", "Habu d'Okinawa", "Habu de Kikuchi", "Habu de Kume-jima", "Habu de Sakishima", "Habu de Ta\xEFwan", "Habu de Tokara", "Habu Hime", "Jaracac\xE1 amarilla", "Jaracac\xE1 jaune", "Jararaca", "Jararaca Pintada", "Jararaca-cruzeira", "Jararaca-ilhoa", "Jararacu\xE7u", "Katuali", "Macagua", "Ma\xEEtre de la brousse", "Mamba de Jameson", "Mamba noir", "Mamba vert", "Mamba vert de Guin\xE9e", "Mamba vert de Jameson", "Mamba vert de l'Est", "Mamba vert de l'Ouest", "Mapanare", "Mocassin d'eau", "\xD1acanin\xE1", "P\xE9lamide", "Plature", "Python", "Python \xE0 l\xE8vres blanches", "Python \xE0 t\xEAte noire", "Python \xE0 t\xEAte noire d'Australie", "Python am\xE9thyste", "Python arboricole vert", "Python arboricole vert australien", "Python birman", "Python boule", "Python d'Am\xE9rique centrale", "Python d'Angola", "Python de Boelen", "Python de Children", "Python de Macklot", "Python de Papouasie", "Python de Ramsay", "Python de Seba", "Python de Stimson", "Python de Timor", "Python fouisseur du Mexique", "Python indien", "Python malais", "Python molure", "Python olive", "Python pygm\xE9", "Python r\xE9ticul\xE9", "Python royal"];