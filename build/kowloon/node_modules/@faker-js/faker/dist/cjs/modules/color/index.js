"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var i = Object.defineProperty;
var g = Object.getOwnPropertyDescriptor;
var p = Object.getOwnPropertyNames;
var y = Object.prototype.hasOwnProperty;
var C = function C(e, r) {
    for (var t in r) i(e, t, {
      get: r[t],
      enumerable: !0
    });
  },
  F = function F(e, r, t, a) {
    if (r && _typeof(r) == "object" || typeof r == "function") {
      var _iterator = _createForOfIteratorHelper(p(r)),
        _step;
      try {
        var _loop = function _loop() {
          var o = _step.value;
          !y.call(e, o) && o !== t && i(e, o, {
            get: function get() {
              return r[o];
            },
            enumerable: !(a = g(r, o)) || a.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var S = function S(e) {
  return F(i({}, "__esModule", {
    value: !0
  }), e);
};
var $ = {};
C($, {
  ColorModule: function ColorModule() {
    return s;
  },
  CssFunction: function CssFunction() {
    return f;
  },
  CssSpace: function CssSpace() {
    return b;
  }
});
module.exports = S($);
var b = function (n) {
    return n.SRGB = "sRGB", n.DisplayP3 = "display-p3", n.REC2020 = "rec2020", n.A98RGB = "a98-rgb", n.ProphotoRGB = "prophoto-rgb", n;
  }(b || {}),
  f = function (m) {
    return m.RGB = "rgb", m.RGBA = "rgba", m.HSL = "hsl", m.HSLA = "hsla", m.HWB = "hwb", m.CMYK = "cmyk", m.LAB = "lab", m.LCH = "lch", m.COLOR = "color", m;
  }(f || {});
function k(e, r) {
  switch (r == null ? void 0 : r.casing) {
    case "upper":
      e = e.toUpperCase();
      break;
    case "lower":
      e = e.toLowerCase();
      break;
  }
  return r != null && r.prefix && (e = r.prefix + e), e;
}
function h(e) {
  return e.map(function (t) {
    if (t % 1 !== 0) {
      var o = new ArrayBuffer(4);
      new DataView(o).setFloat32(0, t);
      var n = new Uint8Array(o);
      return h(Array.from(n)).split(" ").join("");
    }
    return (t >>> 0).toString(2).padStart(8, "0");
  }).join(" ");
}
function d(e) {
  var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "rgb";
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "sRGB";
  var a = function a(o) {
    return Math.round(o * 100);
  };
  switch (r) {
    case "rgba":
      return "rgba(".concat(e[0], ", ").concat(e[1], ", ").concat(e[2], ", ").concat(e[3], ")");
    case "color":
      return "color(".concat(t, " ").concat(e[0], " ").concat(e[1], " ").concat(e[2], ")");
    case "cmyk":
      return "cmyk(".concat(a(e[0]), "%, ").concat(a(e[1]), "%, ").concat(a(e[2]), "%, ").concat(a(e[3]), "%)");
    case "hsl":
      return "hsl(".concat(e[0], "deg ").concat(a(e[1]), "% ").concat(a(e[2]), "%)");
    case "hsla":
      return "hsl(".concat(e[0], "deg ").concat(a(e[1]), "% ").concat(a(e[2]), "% / ").concat(a(e[3]), ")");
    case "hwb":
      return "hwb(".concat(e[0], " ").concat(a(e[1]), "% ").concat(a(e[2]), "%)");
    case "lab":
      return "lab(".concat(a(e[0]), "% ").concat(e[1], " ").concat(e[2], ")");
    case "lch":
      return "lch(".concat(a(e[0]), "% ").concat(e[1], " ").concat(e[2], ")");
    case "rgb":
    default:
      return "rgb(".concat(e[0], ", ").concat(e[1], ", ").concat(e[2], ")");
  }
}
function l(e, r) {
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "rgb";
  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "sRGB";
  switch (r) {
    case "css":
      return d(e, t, a);
    case "binary":
      return h(e);
    default:
      return e;
  }
}
var s = /*#__PURE__*/function () {
  function s(r) {
    _classCallCheck(this, s);
    this.faker = r;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(s.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var t = _step2.value;
        t === "constructor" || typeof this[t] != "function" || (this[t] = this[t].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(s, [{
    key: "human",
    value: function human() {
      return this.faker.helpers.arrayElement(this.faker.definitions.color.human);
    }
  }, {
    key: "space",
    value: function space() {
      return this.faker.helpers.arrayElement(this.faker.definitions.color.space);
    }
  }, {
    key: "cssSupportedFunction",
    value: function cssSupportedFunction() {
      return this.faker.helpers.enumValue(f);
    }
  }, {
    key: "cssSupportedSpace",
    value: function cssSupportedSpace() {
      return this.faker.helpers.enumValue(b);
    }
  }, {
    key: "rgb",
    value: function rgb(r) {
      var _this = this;
      var _ref = r || {},
        _ref$format = _ref.format,
        t = _ref$format === void 0 ? "hex" : _ref$format,
        _ref$includeAlpha = _ref.includeAlpha,
        a = _ref$includeAlpha === void 0 ? !1 : _ref$includeAlpha,
        _ref$prefix = _ref.prefix,
        o = _ref$prefix === void 0 ? "#" : _ref$prefix,
        _ref$casing = _ref.casing,
        n = _ref$casing === void 0 ? "lower" : _ref$casing;
      r = {
        format: t,
        includeAlpha: a,
        prefix: o,
        casing: n
      };
      var c,
        u = "rgb";
      return t === "hex" ? (c = this.faker.string.hexadecimal({
        length: a ? 8 : 6,
        prefix: ""
      }), c = k(c, r), c) : (c = Array.from({
        length: 3
      }, function () {
        return _this.faker.number["int"](255);
      }), a && (c.push(this.faker.number["float"]({
        precision: .01
      })), u = "rgba"), l(c, t, u));
    }
  }, {
    key: "cmyk",
    value: function cmyk(r) {
      var _this2 = this;
      var t = Array.from({
        length: 4
      }, function () {
        return _this2.faker.number["float"]({
          precision: .01
        });
      });
      return l(t, (r == null ? void 0 : r.format) || "decimal", "cmyk");
    }
  }, {
    key: "hsl",
    value: function hsl(r) {
      var t = [this.faker.number["int"](360)];
      for (var a = 0; a < (r != null && r.includeAlpha ? 3 : 2); a++) t.push(this.faker.number["float"]({
        precision: .01
      }));
      return l(t, (r == null ? void 0 : r.format) || "decimal", r != null && r.includeAlpha ? "hsla" : "hsl");
    }
  }, {
    key: "hwb",
    value: function hwb(r) {
      var t = [this.faker.number["int"](360)];
      for (var a = 0; a < 2; a++) t.push(this.faker.number["float"]({
        precision: .01
      }));
      return l(t, (r == null ? void 0 : r.format) || "decimal", "hwb");
    }
  }, {
    key: "lab",
    value: function lab(r) {
      var t = [this.faker.number["float"]({
        precision: 1e-6
      })];
      for (var a = 0; a < 2; a++) t.push(this.faker.number["float"]({
        min: -100,
        max: 100,
        precision: 1e-4
      }));
      return l(t, (r == null ? void 0 : r.format) || "decimal", "lab");
    }
  }, {
    key: "lch",
    value: function lch(r) {
      var t = [this.faker.number["float"]({
        precision: 1e-6
      })];
      for (var a = 0; a < 2; a++) t.push(this.faker.number["float"]({
        max: 230,
        precision: .1
      }));
      return l(t, (r == null ? void 0 : r.format) || "decimal", "lch");
    }
  }, {
    key: "colorByCSSColorSpace",
    value: function colorByCSSColorSpace(r) {
      var _this3 = this;
      (r == null ? void 0 : r.format) === "css" && !(r != null && r.space) && (r = _objectSpread(_objectSpread({}, r), {}, {
        space: "sRGB"
      }));
      var t = Array.from({
        length: 3
      }, function () {
        return _this3.faker.number["float"]({
          precision: 1e-4
        });
      });
      return l(t, (r == null ? void 0 : r.format) || "decimal", "color", r == null ? void 0 : r.space);
    }
  }]);
  return s;
}();
0 && (module.exports = {
  ColorModule: ColorModule,
  CssFunction: CssFunction,
  CssSpace: CssSpace
});