"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e7) { throw _e7; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e8) { didErr = true; err = _e8; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var D = Object.defineProperty;
var g = Object.getOwnPropertyDescriptor;
var y = Object.getOwnPropertyNames;
var k = Object.prototype.hasOwnProperty;
var h = function h(i, e) {
    for (var t in e) D(i, t, {
      get: e[t],
      enumerable: !0
    });
  },
  w = function w(i, e, t, a) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(y(e)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !k.call(i, n) && n !== t && D(i, n, {
            get: function get() {
              return e[n];
            },
            enumerable: !(a = g(e, n)) || a.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return i;
  };
var p = function p(i) {
  return w(D({}, "__esModule", {
    value: !0
  }), i);
};
var x = {};
h(x, {
  DateModule: function DateModule() {
    return d;
  }
});
module.exports = p(x);
var u = require("../../errors/faker-error"),
  b = require("../../internal/deprecated");
function m(i, e) {
  return i = new Date(i), isNaN(i.valueOf()) && (i = e()), i;
}
var d = /*#__PURE__*/function () {
  function d(e) {
    _classCallCheck(this, d);
    this.faker = e;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(d.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var t = _step2.value;
        t === "constructor" || typeof this[t] != "function" || (this[t] = this[t].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(d, [{
    key: "anytime",
    value: function anytime() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = e.refDate,
        a = m(t, this.faker.defaultRefDate);
      return this.between({
        from: new Date(a.getTime() - 1e3 * 60 * 60 * 24 * 365),
        to: new Date(a.getTime() + 1e3 * 60 * 60 * 24 * 365)
      });
    }
  }, {
    key: "past",
    value: function past() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = arguments.length > 1 ? arguments[1] : undefined;
      typeof e == "number" && ((0, b.deprecated)({
        deprecated: "faker.date.past(years, refDate)",
        proposed: "faker.date.past({ years, refDate })",
        since: "8.0",
        until: "9.0"
      }), e = {
        years: e
      });
      var _e = e,
        _e$years = _e.years,
        a = _e$years === void 0 ? 1 : _e$years,
        _e$refDate = _e.refDate,
        n = _e$refDate === void 0 ? t : _e$refDate;
      if (a <= 0) throw new u.FakerError("Years must be greater than 0.");
      var r = m(n, this.faker.defaultRefDate),
        s = {
          min: 1e3,
          max: a * 365 * 24 * 3600 * 1e3
        };
      var o = r.getTime();
      return o -= this.faker.number["int"](s), r.setTime(o), r;
    }
  }, {
    key: "future",
    value: function future() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = arguments.length > 1 ? arguments[1] : undefined;
      typeof e == "number" && ((0, b.deprecated)({
        deprecated: "faker.date.future(years, refDate)",
        proposed: "faker.date.future({ years, refDate })",
        since: "8.0",
        until: "9.0"
      }), e = {
        years: e
      });
      var _e2 = e,
        _e2$years = _e2.years,
        a = _e2$years === void 0 ? 1 : _e2$years,
        _e2$refDate = _e2.refDate,
        n = _e2$refDate === void 0 ? t : _e2$refDate;
      if (a <= 0) throw new u.FakerError("Years must be greater than 0.");
      var r = m(n, this.faker.defaultRefDate),
        s = {
          min: 1e3,
          max: a * 365 * 24 * 3600 * 1e3
        };
      var o = r.getTime();
      return o += this.faker.number["int"](s), r.setTime(o), r;
    }
  }, {
    key: "between",
    value: function between(e, t) {
      (_typeof(e) != "object" || e instanceof Date) && ((0, b.deprecated)({
        deprecated: "faker.date.between(from, to)",
        proposed: "faker.date.between({ from, to })",
        since: "8.0",
        until: "9.0"
      }), e = {
        from: e,
        to: t
      });
      var _e3 = e,
        a = _e3.from,
        n = _e3.to,
        r = m(a, this.faker.defaultRefDate).getTime(),
        s = m(n, this.faker.defaultRefDate).getTime(),
        o = this.faker.number["int"](s - r);
      return new Date(r + o);
    }
  }, {
    key: "betweens",
    value: function betweens(e, t) {
      var _this = this;
      var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
      (_typeof(e) != "object" || e instanceof Date) && ((0, b.deprecated)({
        deprecated: "faker.date.betweens(from, to, count)",
        proposed: "faker.date.betweens({ from, to, count })",
        since: "8.0",
        until: "9.0"
      }), e = {
        from: e,
        to: t,
        count: a
      });
      var _e4 = e,
        n = _e4.from,
        r = _e4.to,
        _e4$count = _e4.count,
        s = _e4$count === void 0 ? 3 : _e4$count;
      return this.faker.helpers.multiple(function () {
        return _this.between({
          from: n,
          to: r
        });
      }, {
        count: s
      }).sort(function (o, f) {
        return o.getTime() - f.getTime();
      });
    }
  }, {
    key: "recent",
    value: function recent() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = arguments.length > 1 ? arguments[1] : undefined;
      typeof e == "number" && ((0, b.deprecated)({
        deprecated: "faker.date.recent(days, refDate)",
        proposed: "faker.date.recent({ days, refDate })",
        since: "8.0",
        until: "9.0"
      }), e = {
        days: e
      });
      var _e5 = e,
        _e5$days = _e5.days,
        a = _e5$days === void 0 ? 1 : _e5$days,
        _e5$refDate = _e5.refDate,
        n = _e5$refDate === void 0 ? t : _e5$refDate;
      if (a <= 0) throw new u.FakerError("Days must be greater than 0.");
      var r = m(n, this.faker.defaultRefDate),
        s = {
          min: 1e3,
          max: a * 24 * 3600 * 1e3
        };
      var o = r.getTime();
      return o -= this.faker.number["int"](s), r.setTime(o), r;
    }
  }, {
    key: "soon",
    value: function soon() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = arguments.length > 1 ? arguments[1] : undefined;
      typeof e == "number" && ((0, b.deprecated)({
        deprecated: "faker.date.soon(days, refDate)",
        proposed: "faker.date.soon({ days, refDate })",
        since: "8.0",
        until: "9.0"
      }), e = {
        days: e
      });
      var _e6 = e,
        _e6$days = _e6.days,
        a = _e6$days === void 0 ? 1 : _e6$days,
        _e6$refDate = _e6.refDate,
        n = _e6$refDate === void 0 ? t : _e6$refDate;
      if (a <= 0) throw new u.FakerError("Days must be greater than 0.");
      var r = m(n, this.faker.defaultRefDate),
        s = {
          min: 1e3,
          max: a * 24 * 3600 * 1e3
        };
      var o = r.getTime();
      return o += this.faker.number["int"](s), r.setTime(o), r;
    }
  }, {
    key: "month",
    value: function month() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = e.abbr,
        _e$abbreviated = e.abbreviated,
        a = _e$abbreviated === void 0 ? t != null ? t : !1 : _e$abbreviated,
        _e$context = e.context,
        n = _e$context === void 0 ? !1 : _e$context;
      t != null && (0, b.deprecated)({
        deprecated: "faker.date.month({ abbr })",
        proposed: "faker.date.month({ abbreviated })",
        since: "8.0",
        until: "9.0"
      });
      var r = this.faker.definitions.date.month;
      var s;
      return a ? n && r.abbr_context != null ? s = "abbr_context" : s = "abbr" : n && r.wide_context != null ? s = "wide_context" : s = "wide", this.faker.helpers.arrayElement(r[s]);
    }
  }, {
    key: "weekday",
    value: function weekday() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = e.abbr,
        _e$abbreviated2 = e.abbreviated,
        a = _e$abbreviated2 === void 0 ? t != null ? t : !1 : _e$abbreviated2,
        _e$context2 = e.context,
        n = _e$context2 === void 0 ? !1 : _e$context2;
      t != null && (0, b.deprecated)({
        deprecated: "faker.date.weekday({ abbr })",
        proposed: "faker.date.weekday({ abbreviated })",
        since: "8.0",
        until: "9.0"
      });
      var r = this.faker.definitions.date.weekday;
      var s;
      return a ? n && r.abbr_context != null ? s = "abbr_context" : s = "abbr" : n && r.wide_context != null ? s = "wide_context" : s = "wide", this.faker.helpers.arrayElement(r[s]);
    }
  }, {
    key: "birthdate",
    value: function birthdate() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var o, f, c, l;
      if (e.max < e.min) throw new u.FakerError("Max ".concat(e.max, " should be larger than or equal to min ").concat(e.min, "."));
      var t = e.mode === "age" ? "age" : "year",
        a = m(e.refDate, this.faker.defaultRefDate),
        n = a.getUTCFullYear();
      var r, s;
      return t === "age" ? (r = new Date(a).setUTCFullYear(n - ((o = e.max) != null ? o : 80) - 1), s = new Date(a).setUTCFullYear(n - ((f = e.min) != null ? f : 18))) : (r = new Date(Date.UTC(0, 0, 2)).setUTCFullYear((c = e.min) != null ? c : n - 80), s = new Date(Date.UTC(0, 11, 30)).setUTCFullYear((l = e.max) != null ? l : n - 18)), new Date(this.faker.number["int"]({
        min: r,
        max: s
      }));
    }
  }]);
  return d;
}();
0 && (module.exports = {
  DateModule: DateModule
});