"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Queue = require("./Queue");

/**
 * @class
 * @private
 */
var PriorityQueue = /*#__PURE__*/function () {
  function PriorityQueue(size) {
    _classCallCheck(this, PriorityQueue);
    this._size = Math.max(+size | 0, 1);
    /** @type {Queue[]} */
    this._slots = [];
    // initialize arrays to hold queue elements
    for (var i = 0; i < this._size; i++) {
      this._slots.push(new Queue());
    }
  }
  _createClass(PriorityQueue, [{
    key: "length",
    get: function get() {
      var _length = 0;
      for (var i = 0, slots = this._slots.length; i < slots; i++) {
        _length += this._slots[i].length;
      }
      return _length;
    }
  }, {
    key: "enqueue",
    value: function enqueue(obj, priority) {
      // Convert to integer with a default value of 0.
      priority = priority && +priority | 0 || 0;
      if (priority) {
        if (priority < 0 || priority >= this._size) {
          priority = this._size - 1;
          // put obj at the end of the line
        }
      }

      this._slots[priority].push(obj);
    }
  }, {
    key: "dequeue",
    value: function dequeue() {
      for (var i = 0, sl = this._slots.length; i < sl; i += 1) {
        if (this._slots[i].length) {
          return this._slots[i].shift();
        }
      }
      return;
    }
  }, {
    key: "head",
    get: function get() {
      for (var i = 0, sl = this._slots.length; i < sl; i += 1) {
        if (this._slots[i].length > 0) {
          return this._slots[i].head;
        }
      }
      return;
    }
  }, {
    key: "tail",
    get: function get() {
      for (var i = this._slots.length - 1; i >= 0; i--) {
        if (this._slots[i].length > 0) {
          return this._slots[i].tail;
        }
      }
      return;
    }
  }]);
  return PriorityQueue;
}();
module.exports = PriorityQueue;