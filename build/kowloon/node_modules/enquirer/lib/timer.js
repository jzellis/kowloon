'use strict';

module.exports = function (prompt) {
  prompt.timers = prompt.timers || {};
  var timers = prompt.options.timers;
  if (!timers) return;
  for (var _i = 0, _Object$keys = Object.keys(timers); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    var opts = timers[key];
    if (typeof opts === 'number') {
      opts = {
        interval: opts
      };
    }
    create(prompt, key, opts);
  }
};
function create(prompt, name) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var timer = prompt.timers[name] = {
    name: name,
    start: Date.now(),
    ms: 0,
    tick: 0
  };
  var ms = options.interval || 120;
  timer.frames = options.frames || [];
  timer.loading = true;
  var interval = setInterval(function () {
    timer.ms = Date.now() - timer.start;
    timer.tick++;
    prompt.render();
  }, ms);
  timer.stop = function () {
    timer.loading = false;
    clearInterval(interval);
  };
  Reflect.defineProperty(timer, 'interval', {
    value: interval
  });
  prompt.once('close', function () {
    return timer.stop();
  });
  return timer.stop;
}