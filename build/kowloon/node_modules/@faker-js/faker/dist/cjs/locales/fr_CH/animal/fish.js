"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var l = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var s = function s(a, e) {
    for (var o in e) r(a, o, {
      get: e[o],
      enumerable: !0
    });
  },
  d = function d(a, e, o, i) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(l(e)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !t.call(a, n) && n !== o && r(a, n, {
            get: function get() {
              return e[n];
            },
            enumerable: !(i = u(e, n)) || i.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var c = function c(a) {
  return d(r({}, "__esModule", {
    value: !0
  }), a);
};
var g = {};
s(g, {
  "default": function _default() {
    return h;
  }
});
module.exports = c(g);
var h = ["Able de Heckel", "Ablette", "Achigan de mer", "Aiglefin", "Aiguillat commun", "Aiguillat noir", "Alose", "Amour blanc", "Anchois", "Anguille", "Apogon", "Apron du Rh\xF4ne", "Aspe", "Baliste", "Bar", "Bar blanc", "Barbeau", "Bardot", "Barracuda", "Baudroie", "Baudroie abyssale de Johnson", "Baudroie commune", "Baudroie d\u2019Am\xE9rique", "Baudroie des abysses", "Beaux yeux", "Billard", "Black-Bass", "Blade", "Blageon", "Blanchet", "Blennie", "Bogue", "Bonite", "Bouvi\xE8re", "Br\xE8me", "Brochet", "Brosme", "Cabillaud", "Capelan", "Capret", "Carassin", "Carassin dor\xE9", "Cardine franche", "Carpe", "Carrelet", "Castagnole", "Cernier", "Chabot", "Chapon", "Chat", "Chevesne", "Claresse", "Colin", "Congre", "Corb", "Cor\xE9gone", "Coryph\xE8ne", "Courbine", "Cr\xE9nilabre", "Cyprinodonte", "Daubenet", "Denti", "Dorade", "Dor\xE9 jaune", "Dormelle", "Dragonnet", "\xC9glefin", "Elbot", "\xC9perlan", "\xC9pinoche", "\xC9pinochette", "\xC9quille", "Escolier", "Espadon", "Esturgeon", "Fanfre", "Fl\xE9tan", "Gallinette", "Gardon", "Girelle", "Gobie", "Gobio", "Goret", "Gorette", "Goujon", "Grand-gueule", "Grande vive", "Gr\xE9mille", "Grenadier", "Grenadier de roche", "Grondin", "Guppy", "Hareng", "Hippocampe", "Hotu", "Huchon", "Iba\xEFa", "Ide m\xE9lanote", "Julienne", "Labre", "Lamproie", "Lan\xE7on", "Liche", "Lieu appel\xE9", "Lieu jaune", "Lieu noir", "Limande", "Lingue", "Loche", "Lompe", "Loquette d'Europe", "Lorette", "Lotte", "Loubine", "Loup de mer", "M\xE2choiron", "Maigre", "Makaire", "Mako", "Malachigan", "Mandoule", "Maquereau", "Mara\xEEche", "Marbr\xE9", "Marigane noire", "Marlin", "Maskinong\xE9", "mehdia", "M\xE9nomini rond", "Merlan", "Merlu", "M\xE9rou", "Merval", "Meunier", "Mirandelle", "M\xF4le", "Mora", "Morue", "Motelle", "Muge", "Mulet", "Mur\xE8ne", "Napol\xE9on", "Oblade", "Omble chevalier", "Omble de fontaine1", "Ombre", "Opah", "Ouananiche", "Pageot", "Pagre", "Panga", "Pataclet", "Perche", "Perche du Nil", "Petite vive", "Phrynorhombe", "Piranha", "Plie", "Poisson clown", "Poisson lanterne", "Poisson rouge", "Poisson z\xE8bre", "Poisson-chat", "Poisson-chien", "Poisson-coffre", "Poisson-lune", "Poisson-pilote", "Raie", "Rascasse", "Rason", "R\xE9mora commun", "Requin", "Requin \xE0 pointes noires", "Requin blanc", "Requin gris", "Requin marteau", "Requin p\xE8lerin", "Requin-baleine", "Requin-nourrice", "Requin-taureau", "Requin-tigre", "Rondin", "Rotengle", "Roucaou", "Rouget", "Roussette", "Rouvet", "Saint-pierre", "Sandre", "Sar", "Sardine", "Sarran", "Saumon", "Saupe", "S\xE9baste", "S\xE9riole", "S\xE9verau", "Sigan Corail", "Silure", "Sole", "Sprat", "Tacaud", "Tanche", "Tanche-tautogue", "Tanude", "Targeur", "Tassergal", "Tautogue noir", "T\xE9traodon", "Thazard", "Thon", "Thon albacore", "Thon blanc", "Thon listao", "Thon rouge", "Tilapia du Nil", "Truite", "Truite arc-en-ciel", "Truite de mer", "Truite fario", "Turbot", "Turbot de sable", "Turbot de Terre-Neuve", "Uranoscope", "Vairon", "Vandoise", "Vieille", "Vivaneau", "Vive", "Vive araign\xE9e", "Vive ray\xE9e"];