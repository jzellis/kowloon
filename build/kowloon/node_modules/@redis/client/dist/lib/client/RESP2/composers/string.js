"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
var string_decoder_1 = require("string_decoder");
var StringComposer = /*#__PURE__*/function () {
  function StringComposer() {
    _classCallCheck(this, StringComposer);
    Object.defineProperty(this, "decoder", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: new string_decoder_1.StringDecoder()
    });
    Object.defineProperty(this, "string", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: ''
    });
  }
  _createClass(StringComposer, [{
    key: "write",
    value: function write(buffer) {
      this.string += this.decoder.write(buffer);
    }
  }, {
    key: "end",
    value: function end(buffer) {
      var string = this.string + this.decoder.end(buffer);
      this.string = '';
      return string;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.string = '';
    }
  }]);
  return StringComposer;
}();
exports["default"] = StringComposer;