'use strict';

var u = require('universalify').fromCallback;
var path = require('path');
var fs = require('graceful-fs');
var mkdir = require('../mkdirs');
function createFile(file, callback) {
  function makeFile() {
    fs.writeFile(file, '', function (err) {
      if (err) return callback(err);
      callback();
    });
  }
  fs.stat(file, function (err, stats) {
    // eslint-disable-line handle-callback-err
    if (!err && stats.isFile()) return callback();
    var dir = path.dirname(file);
    fs.stat(dir, function (err, stats) {
      if (err) {
        // if the directory doesn't exist, make it
        if (err.code === 'ENOENT') {
          return mkdir.mkdirs(dir, function (err) {
            if (err) return callback(err);
            makeFile();
          });
        }
        return callback(err);
      }
      if (stats.isDirectory()) makeFile();else {
        // parent is not a directory
        // This is just to cause an internal ENOTDIR error to be thrown
        fs.readdir(dir, function (err) {
          if (err) return callback(err);
        });
      }
    });
  });
}
function createFileSync(file) {
  var stats;
  try {
    stats = fs.statSync(file);
  } catch (_unused) {}
  if (stats && stats.isFile()) return;
  var dir = path.dirname(file);
  try {
    if (!fs.statSync(dir).isDirectory()) {
      // parent is not a directory
      // This is just to cause an internal ENOTDIR error to be thrown
      fs.readdirSync(dir);
    }
  } catch (err) {
    // If the stat call above failed because the directory doesn't exist, create it
    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir);else throw err;
  }
  fs.writeFileSync(file, '');
}
module.exports = {
  createFile: u(createFile),
  createFileSync: createFileSync
};