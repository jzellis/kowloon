"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var a = Object.defineProperty;
var s = Object.getOwnPropertyDescriptor;
var o = Object.getOwnPropertyNames;
var u = Object.prototype.hasOwnProperty;
var t = function t(n, e) {
    for (var l in e) a(n, l, {
      get: e[l],
      enumerable: !0
    });
  },
  m = function m(n, e, l, r) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(o(e)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !u.call(n, i) && i !== l && a(n, i, {
            get: function get() {
              return e[i];
            },
            enumerable: !(r = s(e, i)) || r.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var h = function h(n) {
  return m(a({}, "__esModule", {
    value: !0
  }), n);
};
var v = {};
t(v, {
  "default": function _default() {
    return g;
  }
});
module.exports = h(v);
var g = ["Ambl\xE8ve", "Bullange", "Burg-Reuland", "Butgenbach", "Eupen", "La Calamine", "Lontzen", "Raeren", "Saint-Vith", "Aiseau-Presles", "Amay", "Andenne", "Anderlues", "Anh\xE9e", "Ans", "Anthisnes", "Antoing", "Arlon", "Assesse", "Ath", "Attert", "Aubange", "Aubel", "Awans", "Aywaille", "Baelen", "Bassenge", "Bastogne", "Beaumont", "Beauraing", "Beauvechain", "Beloeil", "Berloz", "Bernissart", "Bertogne", "Bertrix", "Beyne-Heusay", "Bi\xE8vre", "Binche", "Bl\xE9gny", "Bouillon", "Boussu", "Braine-l'Alleud", "Braine-le-Ch\xE2teau", "Braine-le-Comte", "Braives", "Brugelette", "Brunehaut", "Burdinne", "Celles", "Cerfontaine", "Chapelle-lez-Herlaimont", "Charleroi", "Chastre", "Ch\xE2telet", "Chaudfontaine", "Chaumont-Gistoux", "Chi\xE8vres", "Chimay", "Chiny", "Ciney", "Clavier", "Colfontaine", "Comblain-au-Pont", "Comines-Warneton", "Courcelles", "Court-Saint-Etienne", "Couvin", "Crisn\xE9e", "Dalhem", "Daverdisse", "Dinant", "Dison", "Doische", "Donceel", "Dour", "Durbuy", "Ecaussinnes", "Eghez\xE9e", "Ellezelles", "Enghien", "Engis", "Erez\xE9e", "Erquelinnes", "Esneux", "Estaimpuis", "Estinnes", "Etalle", "Faimes", "Farciennes", "Fauvillers", "Fernelmont", "Ferri\xE8res", "Fexhe-le-Haut-Clocher", "Fl\xE9malle", "Fl\xE9ron", "Fleurus", "Flobecq", "Floreffe", "Florennes", "Florenville", "Fontaine-l'Ev\xEAque", "Fosses-la-Ville", "Frameries", "Frasnes-lez-Anvaing", "Froidchapelle", "Gedinne", "Geer", "Gembloux", "Genappe", "Gerpinnes", "Gesves", "Gouvy", "Gr\xE2ce-Hollogne", "Grez-Doiceau", "Habay", "Hamoir", "Hamois", "Ham-sur-Heure-Nalinnes", "Hannut", "Hasti\xE8re", "Havelange", "H\xE9l\xE9cine", "Hensies", "Herbeumont", "H\xE9ron", "Herstal", "Herve", "Honnelles", "Hotton", "Houffalize", "Houyet", "Huy", "Incourt", "Ittre", "Jalhay", "Jemeppe-sur-Sambre", "Jodoigne", "Juprelle", "Jurbise", "La Bruy\xE8re", "La Hulpe", "La Louvi\xE8re", "La Roche-en-Ardenne", "Lasne", "Le Roeulx", "L\xE9glise", "Lens", "Les Bons Villers", "Lessines", "Leuze-en-Hainaut", "Libin", "Libramont-Chevigny", "Li\xE8ge", "Lierneux", "Limbourg", "Lincent", "Lobbes", "Malmedy", "Manage", "Manhay", "Marche-en-Famenne", "Marchin", "Martelange", "Meix-devant-Virton", "Merbes-le-Ch\xE2teau", "Messancy", "Mettet", "Modave", "Momignies", "Mons", "Mont-de-l'Enclus", "Montigny-le-Tilleul", "Mont-Saint-Guibert", "Morlanwelz", "Mouscron", "Musson", "Namur", "Nandrin", "Nassogne", "Neufch\xE2teau", "Neupr\xE9", "Nivelles", "Ohey", "Olne", "Onhaye", "Oreye", "Orp-Jauche", "Ottignies-Louvain-la-Neuve", "Ouffet", "Oupeye", "Paliseul", "Pecq", "Pepinster", "P\xE9ruwelz", "Perwez", "Philippeville", "Plombi\xE8res", "Pont-\xE0-celles", "Profondeville", "Quaregnon", "Qu\xE9vy", "Qui\xE9vrain", "Ramillies", "Rebecq", "Remicourt", "Rendeux", "Rixensart", "Rochefort", "Rouvroy", "Rumes", "Sainte-Ode", "Saint-Georges-sur-Meuse", "Saint-Ghislain", "Saint-Hubert", "Saint-L\xE9ger", "Saint-Nicolas", "Sambreville", "Seneffe", "Seraing", "Silly", "Sivry-Rance", "Soignies", "Sombreffe", "Somme-Leuze", "Soumagne", "Spa", "Sprimont", "Stavelot", "Stoumont", "Tellin", "Tenneville", "Theux", "Thimister-Clermont", "Thuin", "Tinlot", "Tintigny", "Tournai", "Trois-Ponts", "Trooz", "Tubize", "Vaux-sur-S\xFBre", "Verlaine", "Verviers", "Vielsalm", "Villers-la-Ville", "Villers-le-Bouillet", "Viroinval", "Virton", "Vis\xE9", "Vresse-sur-Semois", "Waimes", "Walcourt", "Walhain", "Wanze", "Waremme", "Wasseiges", "Waterloo", "Wavre", "Welkenraedt", "Wellin", "Yvoir"];