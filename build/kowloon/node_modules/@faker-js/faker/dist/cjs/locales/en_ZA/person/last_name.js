"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var l = Object.defineProperty;
var i = Object.getOwnPropertyDescriptor;
var h = Object.getOwnPropertyNames;
var s = Object.prototype.hasOwnProperty;
var t = function t(a, e) {
    for (var o in e) l(a, o, {
      get: e[o],
      enumerable: !0
    });
  },
  M = function M(a, e, o, r) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(h(e)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !s.call(a, n) && n !== o && l(a, n, {
            get: function get() {
              return e[n];
            },
            enumerable: !(r = i(e, n)) || r.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var u = function u(a) {
  return M(l({}, "__esModule", {
    value: !0
  }), a);
};
var c = {};
t(c, {
  "default": function _default() {
    return m;
  }
});
module.exports = u(c);
var m = ["Dlamini", "Zulu", "Mabunda", "Makhanya", "Khoza", "Zuma", "Zondi", "Abbott", "Adams", "Anderson", "Adcock", "Ashley", "Amla", "Baloyi", "Bailey", "Barrows", "Barton", "Berge", "Bernhard", "Bernier", "Boyle", "Braun", "Blanckenberg", "Brekke", "Brown", "Bruen", "Bacher", "Boucher", "Bromfield", "Benjamin", "Bongo", "Bhana", "Bhengu", "Carter", "Cameron", "Champlin", "Collins", "Cullinan", "Chetty", "Cook", "Connelly", "Crooks", "Cummings", "Cassim", "Dube", "Dhlamini", "Daniel", "Davis", "Dower", "Dixon", "Dickinson", "Douglas", "Deane", "Ebert", "Elworthy", "Feest", "Fuller", "Fish", "Fisher", "Fichardt", "Govender", "Gupta", "Gandhi", "Gibson", "Gibbs", "Gleason", "Goonam", "Gordhan", "Goodwin", "Grady", "Graham", "Grant", "Green", "Greenholt", "Grimes", "Hlongwane", "Harris", "Hall", "Horne", "Harvey", "Hearne", "Heller", "Herzog", "Hudson", "Hlatshwayo", "Hitchinson", "Hathorn", "Hayworth", "Henderson", "Jacobs", "Jacobson", "Johnson", "Johnston", "Jones", "Joseph", "Kalyan", "Kathrada", "King", "Klusener", "Klein", "Keith", "Kennedy", "Kuhn", "Khumalu", "Kunene", "Kempis", "Kemp", "Kubheka", "Khuzwayo", "Linsey", "Lowe", "Letsoalo", "Mhlanga", "Mabaso", "Mazibuko", "Moosa", "Mhlongo", "Mahlangu", "Markham", "Mansell", "Marvin", "Mayer", "Mbatha", "Maseko", "Milton", "Mkhize", "Moses", "McKenzie", "McMillan", "McLaren", "McLean", "Miller", "Mills", "Mitchell", "Mchunu", "Munsamy", "Mnisi", "Moen", "Motaung", "Mudau", "Mohr", "Monahan", "Moore", "Moonsamy", "Mphahlele", "Morar", "Molefe", "Mthembu", "Muller", "Murray", "Moloi", "Mofokeng", "Modise", "Mtshali", "Mathebula", "Mthethwa", "Maluleke", "Mokwena", "Motloung", "Mahabeer", "Mngomezulu", "Nolan", "Nair", "Ndlovu", "Nkosi", "Ngcobo", "Ngwenya", "Ntuli", "Nxumalo", "Ngubane", "Nhlapo", "Ndaba", "Nkomo", "Oliphant", "Ochse", "O'Linn", "Patel", "Parker", "Parkin", "Pillay", "Parnell", "Peterson", "Procter", "Poore", "Pollock", "Powell", "Price", "Prince", "Pithey", "Reilly", "Reid", "Rowe", "Roberts", "Richards", "Richardson", "Schmidt", "Schultz", "Stewart", "Symcox", "Smith", "Stokes", "Sinclair", "Singh", "Shongwe", "Sibiya", "Schwarz", "Snooke", "Sithole", "Terry", "Thompson", "Tromp", "Tuckett", "Taylor", "Tsabalala", "Wesley", "Walsh", "Weber", "Weimann", "Willoughby", "White", "Welch", "West", "Williamson", "Ziemann", "Albertyn", "Bosman", "Bester", "Truter", "Tsotetsi", "Prinsloo", "van Niekerk", "Zimmerman", "Venter", "van den Berg", "Xaba", "Zungu", "Zwane"];