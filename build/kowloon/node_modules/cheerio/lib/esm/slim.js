"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  load: true
};
exports.load = void 0;
var _types = require("./types.js");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});
var _load = require("./load.js");
var _parse = require("./parse.js");
var _domSerializer = _interopRequireDefault(require("dom-serializer"));
var _htmlparser = require("htmlparser2");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
/** @file Alternative Entry point for Cheerio, excluding parse5. */
/**
 * Types used in signatures of Cheerio methods.
 *
 * @category Cheerio
 */

/**
 * Create a querying function, bound to a document created from the provided markup.
 *
 * @param content - Markup to be loaded.
 * @param options - Options for the created instance.
 * @param isDocument - Always `false` here, as we are always using `htmlparser2`.
 * @returns The loaded document.
 * @see {@link https://cheerio.js.org#loading} for additional usage information.
 */
var load = (0, _load.getLoad)((0, _parse.getParse)(_htmlparser.parseDocument), _domSerializer["default"]);
exports.load = load;