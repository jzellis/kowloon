"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var a = Object.defineProperty;
var r = Object.getOwnPropertyDescriptor;
var n = Object.getOwnPropertyNames;
var c = Object.prototype.hasOwnProperty;
var s = function s(e, i) {
    for (var t in i) a(e, t, {
      get: i[t],
      enumerable: !0
    });
  },
  g = function g(e, i, t, h) {
    if (i && _typeof(i) == "object" || typeof i == "function") {
      var _iterator = _createForOfIteratorHelper(n(i)),
        _step;
      try {
        var _loop = function _loop() {
          var l = _step.value;
          !c.call(e, l) && l !== t && a(e, l, {
            get: function get() {
              return i[l];
            },
            enumerable: !(h = r(i, l)) || h.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var u = function u(e) {
  return g(a({}, "__esModule", {
    value: !0
  }), e);
};
var d = {};
s(d, {
  "default": function _default() {
    return o;
  }
});
module.exports = u(d);
var o = ["absolut", "aktuell", "alt", "alternativ", "\xE4ngstlich", "\xE4rgerlich", "arm", "automatisch", "b\xE4renstark", "begabt", "bedrohlich", "billig", "blass", "blind", "breit", "bunt", "chancenlos", "chaotisch", "charakterstark", "charmant", "chronologisch", "clever", "cool", "dankbar", "darstellbar", "deckend", "defensiv", "dumm", "d\xFCnn", "dringend", "eckig", "egoistisch", "ehrgeizig", "einfach", "einmalig", "einzig", "essbar", "falsch", "fantastisch", "faul", "fein", "fest", "fett", "fertig", "feucht", "flei\xDFig", "friedlich", "geeignet", "genau", "gern", "glatt", "gl\xFCcklich", "grob", "gro\xDF", "g\xFCnstig", "gut", "halb", "hart", "heimlich", "hei\xDF", "hektisch", "hell", "hoffnungsvoll", "ideal", "identisch", "ignorant", "illegal", "imagin\xE4r", "individuell", "integriert", "international", "jahrelang", "j\xE4hrlich", "jugendlich", "jung", "kalt", "kantig", "klein", "klug", "kurz", "krank", "krumm", "k\xFCnstlich", "lahm", "l\xE4ndlich", "lang", "laut", "leicht", "lieb", "lockig", "l\xF6slich", "m\xE4chtig", "malerisch", "meisterlich", "mehrsprachig", "monatlich", "musikalisch", "mutig", "nah", "nass", "negativ", "neu", "neugierig", "niedrig", "n\xF6rdlich", "normal", "oberfl\xE4chlich", "offen", "offensichtlich", "\xF6ffentlich", "okay", "optimal", "ordentlich", "\xF6rtlich", "panisch", "parallel", "passiv", "peinlich", "pers\xF6nlich", "physikalisch", "politisch", "praktisch", "quadratisch", "qualitativ", "qualvoll", "quer", "ratlos", "r\xE4tselhaft", "rauchfrei", "regnerisch", "reich", "relativ", "richtig", "sachlich", "salzig", "scharf", "schattig", "schnell", "sch\xF6n", "sicher", "spitz", "stark", "steil", "still", "stumm", "s\xFC\xDF", "sympathisch", "taub", "teamf\xE4hig", "teilbar", "theoretisch", "tot", "traditionell", "traurig", "trocken", "typisch", "umkehrbar", "umst\xE4ndlich", "unbedeutend", "undurchsichtig", "ungenau", "unglaublich", "uralt", "verantwortungslos", "ver\xE4nderbar", "verbrannt", "verkehrt", "versichert", "verbogen", "voll", "vollst\xE4ndig", "wach", "warm", "weich", "weit", "wertvoll", "wichtig", "wild", "wunderbar", "x-beliebig", "x-fach", "x-f\xF6rmig", "y-f\xF6rmig", "zahnlos", "zeitlich", "zentral", "zerbrechlich", "zornig", "zur\xFCckhaltend", "zusammenh\xE4ngend", "zweifach"];