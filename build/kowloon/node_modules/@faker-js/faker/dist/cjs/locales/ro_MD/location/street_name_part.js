"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var e = Object.defineProperty;
var l = Object.getOwnPropertyDescriptor;
var n = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var c = function c(a, i) {
    for (var o in i) e(a, o, {
      get: i[o],
      enumerable: !0
    });
  },
  s = function s(a, i, o, u) {
    if (i && _typeof(i) == "object" || typeof i == "function") {
      var _iterator = _createForOfIteratorHelper(n(i)),
        _step;
      try {
        var _loop = function _loop() {
          var r = _step.value;
          !t.call(a, r) && r !== o && e(a, r, {
            get: function get() {
              return i[r];
            },
            enumerable: !(u = l(i, r)) || u.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var v = function v(a) {
  return s(e({}, "__esModule", {
    value: !0
  }), a);
};
var C = {};
c(C, {
  "default": function _default() {
    return d;
  }
});
module.exports = v(C);
var d = ["1 Mai", "27 August", "28 Iunie", "31 August", "8 Martie", "9 Mai", "Adam", "Alba Iulia", "Aldea-Teodorovici Doina Si Ion", "Alecsandri", "Alecu Russo", "Alexandru Cel Bun", "Alexandru Donici", "Alexandru Lapusneanu", "Alexandru Plamadeala", "Alexei Mateevici", "Arborilor", "Arghezi", "Aron Pumnul", "Asachi", "Aurel David", "Balcescu", "Banulescu-Bodoni", "Barbu Lautaru", "Basarabia", "Basarabiei", "Bernardazzi", "Bisericii", "Bogdan Voda", "Boris Glavan", "Brincus", "Bucovinei", "Bucuriei", "Bulgara", "Burebista", "Cahul", "Cantemir", "Cantemir Dimitrie", "Capriana", "Caraciobanu", "Caragiale", "Ceaikovski Piotr", "Ceapaev", "Cehov", "Cetatea Alba", "Chirov", "Chisinau", "Chisinaului", "Cibotari Maria", "Cimpului", "Ciobanu", "Ciocirlia", "Ciorba", "Ciprian Porumbescu", "Ciresilor", "Cismelelor", "Codrilor", "Colinei", "Columna", "Comarov", "Comarova", "Constantin Negruzzi", "Constantin Stamati", "Constantin Stere", "Constructorilor", "Corlatenilor", "Cosbuc", "Cosbuc George", "Cosmescu", "Cosmonautilor", "Costin", "Crasescu", "Creanga", "Crihan", "Crizantemelor", "Cupcea", "Cutuzov", "Cuza Voda", "Dacia", "Dacilor", "Damian", "Decebal", "Delete", "Dimo", "Doga", "Doina", "Donici", "Dosoftei", "Dragan", "Dragomirna", "Dragos Voda", "Dumbrava", "Eminescu", "Feroviarilor", "Fintinilor", "Floreni", "Florilor", "Franco", "Frunze", "Gagarin", "Garii", "Gheorghe Asachi", "Ghica-Voda", "Ghioceilor", "Glavan", "Gogol", "Gradinarilor", "Gradinilor", "Gratiesti", "Gribov", "Grigore Ureche", "Haiducilor", "Halippa", "Halippa Pantelimon", "Hasdeu", "Hasdeu Bogdan Petriceicu", "Hijdeu", "Hincesti", "Horelor", "Hotin", "Hotinului", "Iachir", "Ialoveni", "Iasului", "Iazului", "Igor Vieru", "Independentei", "Industriala", "Ioan Voda", "Ion Creanga", "Ion Neculce", "Ion Soltis", "Iorga", "Ismail", "Isnovat", "Izvoarelor", "Kiev", "Kogalniceanu", "Lacului", "Lapusneanu", "Lautarilor", "Lazo", "Lenin", "Lermontov", "Libertatii", "Livezilor", "Liviu Deleanu", "Lomonosov", "Luceafarul", "Luceafarului", "Lupu", "Macarenco", "Maiacovschi Vladimir", "Maria Cibotaru", "Maria Dragan", "Marinescu", "Martisor", "Mateevici", "Matei Basarab", "Matrosov", "Mendeleev", "Meniuc", "Mesterul Manole", "Miciurin", "Micle", "Mihai Eminescu", "Mihai Sadoveanu", "Mihail Kogalniceanu", "Mihail Sadoveanu", "Milescu Spataru Nicolae", "Miorita", "Mioritei", "Mira", "Mircea Cel Batrin", "Miron Costin", "Mitropolit Petru Movila", "Mitropolitul Varlaam", "Moldova", "Moldovita", "Molodiojnaia", "Moruzi", "Movila", "Muncii", "Muresanu", "Musicescu Gavriil", "Neaga", "Necrasov", "Neculce", "Negruzzi", "Nicolae Iorga", "Novaia", "Nucarilor", "Nuferilor", "Orhei", "Ostrovschi", "Ovidiu", "Pacii", "Padurilor", "Parcului", "Pavlov", "Pescarilor", "Petru Movila", "Petru Rares", "Petru Zadnipru", "Pirogov", "Plaiului", "Plamadeala", "Plopilor", "Plugarilor", "Pobedi", "Podgorenilor", "Polevaia", "Popov", "Porumbescu", "Prieteniei", "Primaverii", "Pruncul", "Puskin", "Rares", "Razesilor", "Rediu Mare", "Renasterii", "Romana", "Russo", "Russo Alecu", "Sadovaia", "Sadoveanu", "Saharov", "Salcimilor", "Satul", "Sciusev", "Scolii", "Serghei Lazo", "Sevcenco", "Sfatul Tarii", "Sfinta Maria", "Sfinta Treime", "Sfintul Andrei", "Sfintul Gheorghe", "Sirbu", "Smochina", "Solidaritatii", "Solnecinaia", "Solohov", "Soltis", "Soltis Ion", "Sperantei", "Sportiva", "Stamati", "Stefan Cel Mare", "Stefan Neaga", "Stefan Voda", "Stejarilor", "Stere", "Studentilor", "Suceava", "Suveranitatii", "Suvorov", "Tamara Ciobanu", "Tatarbunar", "Tcacenco", "Teilor", "Teodorovici", "Testemiteanu", "Tighina", "Tighinei", "Timisoara", "Tineretului", "Tolstoi", "Toma Ciorba", "Traian", "Trandafirilor", "Tricolorului", "Tudor Vladimirescu", "Turghenev", "Ungureanu", "Unirii", "Ureche", "Uzinelor", "Valeriu Cupcea", "Varlaam", "Vasile Alecsandri", "Vasile Lupu", "Veronica Micle", "Victoriei", "Vieru", "Viilor", "Visinilor", "Viteazul Mihai", "Vlad Tepes", "Vladimirescu", "Voda", "Voluntarilor", "Vorosilov", "Zadnipru", "Zamfir Arbore", "Zmeurei", "Zorilor"];