"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var l = Object.defineProperty;
var r = Object.getOwnPropertyDescriptor;
var n = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var c = function c(e, i) {
    for (var u in i) l(e, u, {
      get: i[u],
      enumerable: !0
    });
  },
  s = function s(e, i, u, o) {
    if (i && _typeof(i) == "object" || typeof i == "function") {
      var _iterator = _createForOfIteratorHelper(n(i)),
        _step;
      try {
        var _loop = function _loop() {
          var a = _step.value;
          !t.call(e, a) && a !== u && l(e, a, {
            get: function get() {
              return i[a];
            },
            enumerable: !(o = r(i, a)) || o.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var g = function g(e) {
  return s(l({}, "__esModule", {
    value: !0
  }), e);
};
var h = {};
c(h, {
  "default": function _default() {
    return S;
  }
});
module.exports = g(h);
var S = ["Capalna", "Gheorghe Duca", "Acvila", "Lisabona", "Campulung", "Ilie Gurita", "Succesului", "Siret", "Mihai Viteazul", "Complexului", "Chihlimbarului", "Prahova", "George Cosbuc", "Bobalna", "Eroina De La Jiu", "Cucuzel Ion", "Sergent Turturica", "Timisul De Sus", "Tuberozelor", "Rulmentului", "Soldat Polosca Tanase", "Nabucului", "Flautului", "Poiana Codrului", "Daia", "Soldat Dima Dumitru", "Bulandra Tony", "Pastravilor", "Eternitatii", "Tufanilor", "Discului", "Garnitei", "Costaforu", "Aerogarii", "Preluca", "Delureni", "Soldat Velicu Stefan", "Ocalei", "Calboranu George", "Cercelus", "Timocului", "Alexandru Locusteanu", "Pumnul Aron", "Migdalului", "Valului", "Inginer Radu Elie", "Cricovului", "Mavrogheni", "Bauxitei", "Movilitei", "Pictor Hentia Sava", "Abus", "Fieni", "Zambetului", "Izvorul Muresului", "Rolei", "Utiesului", "Gheorghe Popescu", "Radulescu Drumea", "Sacele", "Soimarestilor", "Romeo", "Voicesti", "Carada Eugeniu", "Barometrului", "Tudorache Gheorghe", "Morii", "Jules Michelet", "Nicolae G. Caranfil", "Sergent Anghel Gheorghe", "Reconstructiei", "Vespasian", "Tincani", "Stirbei Voda", "Ariesu Mare", "Penelului", "Piscul Vechi", "Natiunile Unite", "Doctor Tanasescu Ion", "Stefan Greceanu", "Banul Scarlat", "Crinului", "Domnita Florica", "Plutonier Nita Ion", "Soldat Ionita Stere", "Rovine", "Tropicelor", "Matei Millo", "Veronica Micle", "Pictor Iser Iosif", "Mitropolit Nifon", "Locotenent Victor Manu", "Studioului", "Piatra Morii", "Valea Lupului", "Episcop Chesarie", "Sergent Major Drag Marin", "Bega", "Dobrun", "Fulgeresti"];