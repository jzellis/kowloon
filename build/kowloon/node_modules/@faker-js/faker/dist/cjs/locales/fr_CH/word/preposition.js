"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var n = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var t = Object.getOwnPropertyNames;
var o = Object.prototype.hasOwnProperty;
var i = function i(d, e) {
    for (var r in e) n(d, r, {
      get: e[r],
      enumerable: !0
    });
  },
  p = function p(d, e, r, s) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(t(e)),
        _step;
      try {
        var _loop = function _loop() {
          var a = _step.value;
          !o.call(d, a) && a !== r && n(d, a, {
            get: function get() {
              return e[a];
            },
            enumerable: !(s = u(e, a)) || s.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return d;
  };
var l = function l(d) {
  return p(n({}, "__esModule", {
    value: !0
  }), d);
};
var v = {};
i(v, {
  "default": function _default() {
    return c;
  }
});
module.exports = l(v);
var c = ["a", "apr\xE8s", "avant", "avex", "chez", "concernant", "contre", "dans", "de", "depuis", "derri\xE8re", "d\xE8s", "devant", "durant", "en", "entre", "envers", "hormis", "hors", "jusque", "malgr\xE9", "moyennant", "nonobstant", "outre", "par", "parmi", "pendant", "pour", "pr\xE8s", "sans", "sauf", "selon", "sous", "suivant", "sur", "touchant", "vers", "via", "\xE0 bas de", "\xE0 cause de", "\xE0 c\xF4t\xE9 de", "\xE0 d\xE9faut de ", "afin de", "\xE0 force de", "\xE0 la merci", "\xE0 la faveur de", "\xE0 l'\xE9gard de", "\xE0 l'encontre de", "\xE0 l'entour de", "\xE0 l'exception de", "\xE0 l'instar de", "\xE0 l'insu de", "\xE0 m\xEAme", "\xE0 moins de", "\xE0 partir de", "\xE0 raison de", "\xE0 seule fin de", "\xE0 travers", "au-dedans de", "au d\xE9faut de", "au-dehors", "au-dessous de", "au-dessus de", "au lieu de", "au moyen de", "aupr\xE8s de", "aux environs de", "au prix de", "autour de", "aux alentours de", "au d\xE9pens de", "avant de", "d'apr\xE8s", "d'avec", "de fa\xE7on \xE0", "de la part de", "de mani\xE8re \xE0", "d'entre", "de par", "de peur de", "du c\xF4t\xE9 de", "en bas de", "en dec\xE0 de", "en dedans de", "en dehors de", "en d\xE9pit de", "en face de", "en faveur de", "en guise de", "en outre de", "en plus de", "gr\xE2ce \xE0", "hors de", "loin de", "lors de", "par rapport \xE0", "par suite de", "pr\xE8s de", "proche de", "quant \xE0", "quitte \xE0", "sauf \xE0", "sous couleur de", "vis-\xE0-vie de"];