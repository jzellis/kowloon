"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var e = Object.defineProperty;
var v = Object.getOwnPropertyDescriptor;
var l = Object.getOwnPropertyNames;
var k = Object.prototype.hasOwnProperty;
var c = function c(i, a) {
    for (var r in a) e(i, r, {
      get: a[r],
      enumerable: !0
    });
  },
  t = function t(i, a, r, n) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(l(a)),
        _step;
      try {
        var _loop = function _loop() {
          var o = _step.value;
          !k.call(i, o) && o !== r && e(i, o, {
            get: function get() {
              return a[o];
            },
            enumerable: !(n = v(a, o)) || n.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return i;
  };
var j = function j(i) {
  return t(e({}, "__esModule", {
    value: !0
  }), i);
};
var s = {};
c(s, {
  "default": function _default() {
    return u;
  }
});
module.exports = j(s);
var u = ["Bakar", "Beli Manastir", "Beli\u0161\u0107e", "Benkovac", "Biograd na Moru", "Bjelovar", "Buje", "Buzet", "\u010Cabar", "\u010Cakovec", "\u010Cazma", "Cres", "Crikvenica", "Daruvar", "Delnice", "Donja Stubica", "Donji Miholjac", "Drni\u0161", "Dubrovnik", "Duga Resa", "Dugo Selo", "\u0110akovo", "\u0110ur\u0111evac", "Gare\u0161nica", "Glina", "Gospi\u0107", "Grubi\u0161no Polje", "Hrvatska Kostajnica", "Hvar", "Ilok", "Imotski", "Ivanec", "Ivani\u0107-Grad", "Jastrebarsko", "Karlovac", "Kastav", "Ka\u0161tela", "Klanjec", "Knin", "Komi\u017Ea", "Koprivnica", "Kor\u010Dula", "Kraljevica", "Krapina", "Kri\u017Eevci", "Krk", "Kutina", "Kutjevo", "Labin", "Lepoglava", "Lipik", "Ludbreg", "Makarska", "Mali Lo\u0161inj", "Metkovi\u0107", "Mursko Sredi\u0161ce", "Na\u0161ice", "Nin", "Nova Gradi\u0161ka", "Novalja", "Novi Marof", "Novi Vinodolski", "Novigrad-Cittanova", "Novska", "Obrovac", "Ogulin", "Omi\u0161", "Opatija", "Opuzen", "Orahovica", "Oroslavje", "Osijek", "Oto\u010Dac", "Otok", "Ozalj", "Pag", "Pakrac", "Pazin", "Petrinja", "Pleternica", "Plo\u010De", "Popova\u010Da", "Pore\u010D", "Po\u017Eega", "Pregrada", "Prelog", "Pula", "Rab", "Rijeka", "Rovinj", "Samobor", "Senj", "\u0160ibenik", "Sinj", "Sisak", "Skradin", "Slatina", "Slavonski Brod", "Slunj", "Solin", "Split", "Stari Grad", "Supetar", "Sveta Nedelja", "Sveti Ivan Zelina", "Trilj", "Trogir", "Umag", "Valpovo", "Vara\u017Edin", "Vara\u017Edinske Toplice", "Velika Gorica", "Vinkovci", "Virovitica", "Vis", "Vodice", "Vodnjan", "Vrbovec", "Vrbovsko", "Vrgorac", "Vrlika", "Vukovar", "Zabok", "Zadar", "Zagreb", "Zapre\u0161ic", "Zlatar", "\u017Dupanja"];