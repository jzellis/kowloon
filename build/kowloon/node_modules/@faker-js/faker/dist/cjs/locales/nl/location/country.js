"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var l = Object.getOwnPropertyDescriptor;
var s = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var d = function d(e, a) {
    for (var i in a) r(e, i, {
      get: a[i],
      enumerable: !0
    });
  },
  u = function u(e, a, i, o) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(s(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !t.call(e, n) && n !== i && r(e, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(o = l(a, n)) || o.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var g = function g(e) {
  return u(r({}, "__esModule", {
    value: !0
  }), e);
};
var m = {};
d(m, {
  "default": function _default() {
    return k;
  }
});
module.exports = g(m);
var k = ["Afghanistan", "Akrotiri", "Albani\xEB", "Algerije", "Amerikaanse Maagdeneilanden", "Amerikaans-Samoa", "Andorra", "Angola", "Anguilla", "Antarctica", "Antigua en Barbuda", "Argentini\xEB", "Armeni\xEB", "Aruba", "Ashmore and Cartier Islands", "Atlantic Ocean", "Australi\xEB", "Azerbeidzjan", "Bahama's", "Bahrein", "Bangladesh", "Barbados", "Belarus", "Belgi\xEB", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivi\xEB", "Bosni\xEB-Herzegovina", "Botswana", "Bouvet Island", "Brazili\xEB", "British Indian Ocean Territory", "Britse Maagdeneilanden", "Brunei", "Bulgarije", "Burkina Faso", "Burundi", "Cambodja", "Canada", "Caymaneilanden", "Centraal-Afrikaanse Republiek", "Chili", "China", "Christmas Island", "Clipperton Island", "Cocos (Keeling) Islands", "Colombia", "Comoren (Unie)", "Congo (Democratische Republiek)", "Congo (Volksrepubliek)", "Cook", "Coral Sea Islands", "Costa Rica", "Cuba", "Cyprus", "Denemarken", "Dhekelia", "Djibouti", "Dominica", "Dominicaanse Republiek", "Duitsland", "Ecuador", "Egypte", "El Salvador", "Equatoriaal-Guinea", "Eritrea", "Estland", "Ethiopi\xEB", "European Union", "Falkland", "Faroe Islands", "Fiji", "Filipijnen", "Finland", "Frankrijk", "Frans-Polynesi\xEB", "Gabon", "Gambia", "Gaza Strip", "Georgi\xEB", "Ghana", "Gibraltar", "Grenada", "Griekenland", "Groenland", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinee-Bissau", "Guyana", "Ha\xEFti", "Heard Island and McDonald Islands", "Vaticaanstad", "Honduras", "Hongarije", "Hongkong", "Ierland", "IJsland", "India", "Indonesi\xEB", "Irak", "Iran", "Isle of Man", "Isra\xEBl", "Itali\xEB", "Ivoorkust", "Jamaica", "Jan Mayen", "Japan", "Jemen", "Jersey", "Jordani\xEB", "Kaapverdi\xEB", "Kameroen", "Kazachstan", "Kenia", "Kirgizstan", "Kiribati", "Koeweit", "Kroati\xEB", "Laos", "Lesotho", "Letland", "Libanon", "Liberia", "Libi\xEB", "Liechtenstein", "Litouwen", "Luxemburg", "Macao", "Macedoni\xEB", "Madagaskar", "Malawi", "Maldiven", "Maleisi\xEB", "Mali", "Malta", "Marokko", "Marshall Islands", "Mauritani\xEB", "Mauritius", "Mayotte", "Mexico", "Micronesi\xEB", "Moldavi\xEB", "Monaco", "Mongoli\xEB", "Montenegro", "Montserrat", "Mozambique", "Myanmar", "Namibi\xEB", "Nauru", "Navassa Island", "Nederland", "St. Maarten", "Curacao", "Nepal", "Ngwane", "Nicaragua", "Nieuw-Caledoni\xEB", "Nieuw-Zeeland", "Niger", "Nigeria", "Niue", "Noordelijke Marianen", "Noord-Korea", "Noorwegen", "Norfolk Island", "Oekra\xEFne", "Oezbekistan", "Oman", "Oostenrijk", "Pakistan", "Palau", "Panama", "Papoea-Nieuw-Guinea", "Paracel Islands", "Paraguay", "Peru", "Pitcairn", "Polen", "Portugal", "Puerto Rico", "Qatar", "Roemeni\xEB", "Rusland", "Rwanda", "Saint Helena", "Saint Lucia", "Saint Vincent en de Grenadines", "Saint-Pierre en Miquelon", "Salomon", "Samoa", "San Marino", "S\xE3o Tom\xE9 en Principe", "Saudi-Arabi\xEB", "Senegal", "Servi\xEB", "Seychellen", "Sierra Leone", "Singapore", "Sint-Kitts en Nevis", "Sloveni\xEB", "Slowakije", "Soedan", "Somali\xEB", "South Georgia and the South Sandwich Islands", "Southern Ocean", "Spanje", "Spratly Islands", "Sri Lanka", "Suriname", "Svalbard", "Syri\xEB", "Tadzjikistan", "Taiwan", "Tanzania", "Thailand", "Timor Leste", "Togo", "Tokelau", "Tonga", "Trinidad en Tobago", "Tsjaad", "Tsjechi\xEB", "Tunesi\xEB", "Turkije", "Turkmenistan", "Turks-en Caicoseilanden", "Tuvalu", "Uganda", "Uruguay", "Vanuatu", "Venezuela", "Verenigd Koninkrijk", "Verenigde Arabische Emiraten", "Verenigde Staten van Amerika", "Vietnam", "Wake Island", "Wallis en Futuna", "Wereld", "West Bank", "Westelijke Sahara", "Zambia", "Zimbabwe", "Zuid-Afrika", "Zuid-Korea", "Zweden", "Zwitserland"];