"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var Ar = Object.defineProperty;
var Rr = Object.getOwnPropertyDescriptor;
var Hr = Object.getOwnPropertyNames;
var Cr = Object.prototype.hasOwnProperty;
var Ur = function Ur(a, r) {
    for (var e in r) Ar(a, e, {
      get: r[e],
      enumerable: !0
    });
  },
  Br = function Br(a, r, e, nr) {
    if (r && _typeof(r) == "object" || typeof r == "function") {
      var _iterator = _createForOfIteratorHelper(Hr(r)),
        _step;
      try {
        var _loop = function _loop() {
          var f = _step.value;
          !Cr.call(a, f) && f !== e && Ar(a, f, {
            get: function get() {
              return r[f];
            },
            enumerable: !(nr = Rr(r, f)) || nr.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var Zr = function Zr(a) {
  return Br(Ar({}, "__esModule", {
    value: !0
  }), a);
};
var Tr = {};
Ur(Tr, {
  allFakers: function allFakers() {
    return Sr;
  },
  fakerAF_ZA: function fakerAF_ZA() {
    return o.faker;
  },
  fakerAR: function fakerAR() {
    return k.faker;
  },
  fakerAZ: function fakerAZ() {
    return m.faker;
  },
  fakerBASE: function fakerBASE() {
    return s.faker;
  },
  fakerCS_CZ: function fakerCS_CZ() {
    return t.faker;
  },
  fakerDE: function fakerDE() {
    return i.faker;
  },
  fakerDE_AT: function fakerDE_AT() {
    return p.faker;
  },
  fakerDE_CH: function fakerDE_CH() {
    return _.faker;
  },
  fakerDV: function fakerDV() {
    return E.faker;
  },
  fakerEL: function fakerEL() {
    return N.faker;
  },
  fakerEN: function fakerEN() {
    return A.faker;
  },
  fakerEN_AU: function fakerEN_AU() {
    return n.faker;
  },
  fakerEN_AU_ocker: function fakerEN_AU_ocker() {
    return R.faker;
  },
  fakerEN_BORK: function fakerEN_BORK() {
    return H.faker;
  },
  fakerEN_CA: function fakerEN_CA() {
    return C.faker;
  },
  fakerEN_GB: function fakerEN_GB() {
    return U.faker;
  },
  fakerEN_GH: function fakerEN_GH() {
    return B.faker;
  },
  fakerEN_HK: function fakerEN_HK() {
    return Z.faker;
  },
  fakerEN_IE: function fakerEN_IE() {
    return S.faker;
  },
  fakerEN_IN: function fakerEN_IN() {
    return T.faker;
  },
  fakerEN_NG: function fakerEN_NG() {
    return I.faker;
  },
  fakerEN_US: function fakerEN_US() {
    return l.faker;
  },
  fakerEN_ZA: function fakerEN_ZA() {
    return D.faker;
  },
  fakerES: function fakerES() {
    return F.faker;
  },
  fakerES_MX: function fakerES_MX() {
    return K.faker;
  },
  fakerFA: function fakerFA() {
    return G.faker;
  },
  fakerFI: function fakerFI() {
    return h.faker;
  },
  fakerFR: function fakerFR() {
    return L.faker;
  },
  fakerFR_BE: function fakerFR_BE() {
    return O.faker;
  },
  fakerFR_CA: function fakerFR_CA() {
    return c.faker;
  },
  fakerFR_CH: function fakerFR_CH() {
    return d.faker;
  },
  fakerFR_LU: function fakerFR_LU() {
    return u.faker;
  },
  fakerHE: function fakerHE() {
    return M.faker;
  },
  fakerHR: function fakerHR() {
    return P.faker;
  },
  fakerHU: function fakerHU() {
    return v.faker;
  },
  fakerHY: function fakerHY() {
    return z.faker;
  },
  fakerID_ID: function fakerID_ID() {
    return V.faker;
  },
  fakerIT: function fakerIT() {
    return b.faker;
  },
  fakerJA: function fakerJA() {
    return x.faker;
  },
  fakerKA_GE: function fakerKA_GE() {
    return W.faker;
  },
  fakerKO: function fakerKO() {
    return X.faker;
  },
  fakerLV: function fakerLV() {
    return j.faker;
  },
  fakerMK: function fakerMK() {
    return y.faker;
  },
  fakerNB_NO: function fakerNB_NO() {
    return J.faker;
  },
  fakerNE: function fakerNE() {
    return Y.faker;
  },
  fakerNL: function fakerNL() {
    return g.faker;
  },
  fakerNL_BE: function fakerNL_BE() {
    return q.faker;
  },
  fakerPL: function fakerPL() {
    return w.faker;
  },
  fakerPT_BR: function fakerPT_BR() {
    return Q.faker;
  },
  fakerPT_PT: function fakerPT_PT() {
    return $.faker;
  },
  fakerRO: function fakerRO() {
    return rr.faker;
  },
  fakerRO_MD: function fakerRO_MD() {
    return ar.faker;
  },
  fakerRU: function fakerRU() {
    return fr.faker;
  },
  fakerSK: function fakerSK() {
    return er.faker;
  },
  fakerSR_RS_latin: function fakerSR_RS_latin() {
    return or.faker;
  },
  fakerSV: function fakerSV() {
    return kr.faker;
  },
  fakerTH: function fakerTH() {
    return mr.faker;
  },
  fakerTR: function fakerTR() {
    return sr.faker;
  },
  fakerUK: function fakerUK() {
    return tr.faker;
  },
  fakerUR: function fakerUR() {
    return ir.faker;
  },
  fakerVI: function fakerVI() {
    return pr.faker;
  },
  fakerZH_CN: function fakerZH_CN() {
    return _r.faker;
  },
  fakerZH_TW: function fakerZH_TW() {
    return Er.faker;
  },
  fakerZU_ZA: function fakerZU_ZA() {
    return Nr.faker;
  }
});
module.exports = Zr(Tr);
var o = require("./af_ZA"),
  k = require("./ar"),
  m = require("./az"),
  s = require("./base"),
  t = require("./cs_CZ"),
  i = require("./de"),
  p = require("./de_AT"),
  _ = require("./de_CH"),
  E = require("./dv"),
  N = require("./el"),
  A = require("./en"),
  n = require("./en_AU"),
  R = require("./en_AU_ocker"),
  H = require("./en_BORK"),
  C = require("./en_CA"),
  U = require("./en_GB"),
  B = require("./en_GH"),
  Z = require("./en_HK"),
  S = require("./en_IE"),
  T = require("./en_IN"),
  I = require("./en_NG"),
  l = require("./en_US"),
  D = require("./en_ZA"),
  F = require("./es"),
  K = require("./es_MX"),
  G = require("./fa"),
  h = require("./fi"),
  L = require("./fr"),
  O = require("./fr_BE"),
  c = require("./fr_CA"),
  d = require("./fr_CH"),
  u = require("./fr_LU"),
  M = require("./he"),
  P = require("./hr"),
  v = require("./hu"),
  z = require("./hy"),
  V = require("./id_ID"),
  b = require("./it"),
  x = require("./ja"),
  W = require("./ka_GE"),
  X = require("./ko"),
  j = require("./lv"),
  y = require("./mk"),
  J = require("./nb_NO"),
  Y = require("./ne"),
  g = require("./nl"),
  q = require("./nl_BE"),
  w = require("./pl"),
  Q = require("./pt_BR"),
  $ = require("./pt_PT"),
  rr = require("./ro"),
  ar = require("./ro_MD"),
  fr = require("./ru"),
  er = require("./sk"),
  or = require("./sr_RS_latin"),
  kr = require("./sv"),
  mr = require("./th"),
  sr = require("./tr"),
  tr = require("./uk"),
  ir = require("./ur"),
  pr = require("./vi"),
  _r = require("./zh_CN"),
  Er = require("./zh_TW"),
  Nr = require("./zu_ZA");
var Sr = {
  af_ZA: o.faker,
  ar: k.faker,
  az: m.faker,
  base: s.faker,
  cs_CZ: t.faker,
  de: i.faker,
  de_AT: p.faker,
  de_CH: _.faker,
  dv: E.faker,
  el: N.faker,
  en: A.faker,
  en_AU: n.faker,
  en_AU_ocker: R.faker,
  en_BORK: H.faker,
  en_CA: C.faker,
  en_GB: U.faker,
  en_GH: B.faker,
  en_HK: Z.faker,
  en_IE: S.faker,
  en_IN: T.faker,
  en_NG: I.faker,
  en_US: l.faker,
  en_ZA: D.faker,
  es: F.faker,
  es_MX: K.faker,
  fa: G.faker,
  fi: h.faker,
  fr: L.faker,
  fr_BE: O.faker,
  fr_CA: c.faker,
  fr_CH: d.faker,
  fr_LU: u.faker,
  he: M.faker,
  hr: P.faker,
  hu: v.faker,
  hy: z.faker,
  id_ID: V.faker,
  it: b.faker,
  ja: x.faker,
  ka_GE: W.faker,
  ko: X.faker,
  lv: j.faker,
  mk: y.faker,
  nb_NO: J.faker,
  ne: Y.faker,
  nl: g.faker,
  nl_BE: q.faker,
  pl: w.faker,
  pt_BR: Q.faker,
  pt_PT: $.faker,
  ro: rr.faker,
  ro_MD: ar.faker,
  ru: fr.faker,
  sk: er.faker,
  sr_RS_latin: or.faker,
  sv: kr.faker,
  th: mr.faker,
  tr: sr.faker,
  uk: tr.faker,
  ur: ir.faker,
  vi: pr.faker,
  zh_CN: _r.faker,
  zh_TW: Er.faker,
  zu_ZA: Nr.faker
};
0 && (module.exports = {
  allFakers: allFakers,
  fakerAF_ZA: fakerAF_ZA,
  fakerAR: fakerAR,
  fakerAZ: fakerAZ,
  fakerBASE: fakerBASE,
  fakerCS_CZ: fakerCS_CZ,
  fakerDE: fakerDE,
  fakerDE_AT: fakerDE_AT,
  fakerDE_CH: fakerDE_CH,
  fakerDV: fakerDV,
  fakerEL: fakerEL,
  fakerEN: fakerEN,
  fakerEN_AU: fakerEN_AU,
  fakerEN_AU_ocker: fakerEN_AU_ocker,
  fakerEN_BORK: fakerEN_BORK,
  fakerEN_CA: fakerEN_CA,
  fakerEN_GB: fakerEN_GB,
  fakerEN_GH: fakerEN_GH,
  fakerEN_HK: fakerEN_HK,
  fakerEN_IE: fakerEN_IE,
  fakerEN_IN: fakerEN_IN,
  fakerEN_NG: fakerEN_NG,
  fakerEN_US: fakerEN_US,
  fakerEN_ZA: fakerEN_ZA,
  fakerES: fakerES,
  fakerES_MX: fakerES_MX,
  fakerFA: fakerFA,
  fakerFI: fakerFI,
  fakerFR: fakerFR,
  fakerFR_BE: fakerFR_BE,
  fakerFR_CA: fakerFR_CA,
  fakerFR_CH: fakerFR_CH,
  fakerFR_LU: fakerFR_LU,
  fakerHE: fakerHE,
  fakerHR: fakerHR,
  fakerHU: fakerHU,
  fakerHY: fakerHY,
  fakerID_ID: fakerID_ID,
  fakerIT: fakerIT,
  fakerJA: fakerJA,
  fakerKA_GE: fakerKA_GE,
  fakerKO: fakerKO,
  fakerLV: fakerLV,
  fakerMK: fakerMK,
  fakerNB_NO: fakerNB_NO,
  fakerNE: fakerNE,
  fakerNL: fakerNL,
  fakerNL_BE: fakerNL_BE,
  fakerPL: fakerPL,
  fakerPT_BR: fakerPT_BR,
  fakerPT_PT: fakerPT_PT,
  fakerRO: fakerRO,
  fakerRO_MD: fakerRO_MD,
  fakerRU: fakerRU,
  fakerSK: fakerSK,
  fakerSR_RS_latin: fakerSR_RS_latin,
  fakerSV: fakerSV,
  fakerTH: fakerTH,
  fakerTR: fakerTR,
  fakerUK: fakerUK,
  fakerUR: fakerUR,
  fakerVI: fakerVI,
  fakerZH_CN: fakerZH_CN,
  fakerZH_TW: fakerZH_TW,
  fakerZU_ZA: fakerZU_ZA
});