"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var s = Object.defineProperty;
var l = Object.getOwnPropertyDescriptor;
var f = Object.getOwnPropertyNames;
var d = Object.prototype.hasOwnProperty;
var m = function m(t, e) {
    for (var r in e) s(t, r, {
      get: e[r],
      enumerable: !0
    });
  },
  k = function k(t, e, r, i) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(f(e)),
        _step;
      try {
        var _loop = function _loop() {
          var a = _step.value;
          !d.call(t, a) && a !== r && s(t, a, {
            get: function get() {
              return e[a];
            },
            enumerable: !(i = l(e, a)) || i.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return t;
  };
var p = function p(t) {
  return k(s({}, "__esModule", {
    value: !0
  }), t);
};
var u = {};
m(u, {
  RandomModule: function RandomModule() {
    return h;
  }
});
module.exports = p(u);
var c = require("../../errors/faker-error"),
  n = require("../../internal/deprecated");
var h = /*#__PURE__*/function () {
  function h(e) {
    _classCallCheck(this, h);
    this.faker = e;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(h.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var r = _step2.value;
        r === "constructor" || typeof this[r] != "function" || (this[r] = this[r].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(h, [{
    key: "word",
    value: function word() {
      var _this = this;
      (0, n.deprecated)({
        deprecated: "faker.random.word()",
        proposed: "faker.lorem.word() or faker.word.sample()",
        since: "8.0",
        until: "9.0"
      });
      var e = [function () {
          return _this.faker.location.cardinalDirection();
        }, this.faker.location.country, this.faker.location.county, function () {
          return _this.faker.location.direction();
        }, function () {
          return _this.faker.location.ordinalDirection();
        }, this.faker.location.state, this.faker.location.street, this.faker.color.human, this.faker.commerce.department, this.faker.commerce.product, this.faker.commerce.productAdjective, this.faker.commerce.productMaterial, this.faker.commerce.productName, this.faker.company.buzzAdjective, this.faker.company.buzzNoun, this.faker.company.buzzVerb, this.faker.company.catchPhraseAdjective, this.faker.company.catchPhraseDescriptor, this.faker.company.catchPhraseNoun, this.faker.finance.accountName, this.faker.finance.currencyName, this.faker.finance.transactionType, this.faker.hacker.abbreviation, this.faker.hacker.adjective, this.faker.hacker.ingverb, this.faker.hacker.noun, this.faker.hacker.verb, this.faker.lorem.word, this.faker.music.genre, this.faker.person.gender, this.faker.person.jobArea, this.faker.person.jobDescriptor, this.faker.person.jobTitle, this.faker.person.jobType, this.faker.person.sex, function () {
          return _this.faker.science.chemicalElement().name;
        }, function () {
          return _this.faker.science.unit().name;
        }, this.faker.vehicle.bicycle, this.faker.vehicle.color, this.faker.vehicle.fuel, this.faker.vehicle.manufacturer, this.faker.vehicle.type, this.faker.word.adjective, this.faker.word.adverb, this.faker.word.conjunction, this.faker.word.interjection, this.faker.word.noun, this.faker.word.preposition, this.faker.word.verb],
        r = ["!", "#", "%", "&", "*", ")", "(", "+", "=", ".", "<", ">", "{", "}", "[", "]", ":", ";", "'", '"', "_", "-"];
      var i,
        a = 0;
      do {
        var o = this.faker.helpers.arrayElement(e);
        try {
          i = o();
        } catch (_unused) {
          if (a++, a > 100) throw new c.FakerError("No matching word data available for the current locale");
          continue;
        }
      } while (!i || r.some(function (o) {
        return i.includes(o);
      }));
      return this.faker.helpers.arrayElement(i.split(" "));
    }
  }, {
    key: "words",
    value: function words() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        min: 1,
        max: 3
      };
      return (0, n.deprecated)({
        deprecated: "faker.random.words()",
        proposed: "faker.lorem.words() or faker.word.words()",
        since: "8.0",
        until: "9.0"
      }), this.faker.helpers.multiple(this.word, {
        count: e
      }).join(" ");
    }
  }, {
    key: "locale",
    value: function locale() {
      throw new c.FakerError("This method has been removed. Please use `faker.helpers.objectKey(allLocales/allFakers)` instead.");
    }
  }, {
    key: "alpha",
    value: function alpha() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return (0, n.deprecated)({
        deprecated: "faker.random.alpha()",
        proposed: "faker.string.alpha()",
        since: "8.0",
        until: "9.0"
      }), typeof e == "number" ? this.faker.string.alpha(e) : this.faker.string.alpha({
        length: e.count,
        casing: e.casing,
        exclude: e.bannedChars
      });
    }
  }, {
    key: "alphaNumeric",
    value: function alphaNumeric() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return (0, n.deprecated)({
        deprecated: "faker.random.alphaNumeric()",
        proposed: "faker.string.alphanumeric()",
        since: "8.0",
        until: "9.0"
      }), this.faker.string.alphanumeric({
        length: e,
        exclude: r.bannedChars,
        casing: r.casing
      });
    }
  }, {
    key: "numeric",
    value: function numeric() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return (0, n.deprecated)({
        deprecated: "faker.random.numeric()",
        proposed: "faker.string.numeric()",
        since: "8.0",
        until: "9.0"
      }), this.faker.string.numeric({
        length: e,
        allowLeadingZeros: r.allowLeadingZeros,
        exclude: r.bannedDigits
      });
    }
  }]);
  return h;
}();
0 && (module.exports = {
  RandomModule: RandomModule
});