"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var e = Object.getOwnPropertyDescriptor;
var s = Object.getOwnPropertyNames;
var h = Object.prototype.hasOwnProperty;
var u = function u(i, a) {
    for (var l in a) r(i, l, {
      get: a[l],
      enumerable: !0
    });
  },
  d = function d(i, a, l, t) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(s(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !h.call(i, n) && n !== l && r(i, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(t = e(a, n)) || t.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return i;
  };
var m = function m(i) {
  return d(r({}, "__esModule", {
    value: !0
  }), i);
};
var y = {};
u(y, {
  "default": function _default() {
    return S;
  }
});
module.exports = m(y);
var S = ["Ade", "Agnes", "Ajeng", "Amalia", "Anita", "Ayu", "Aisyah", "Ana", "Ami", "Ani", "Azalea", "Aurora", "Alika", "Anastasia", "Amelia", "Almira", "Agustina", "Aulia", "Anggun", "Bella", "Betania", "Belinda", "Citra", "Cindy", "Chelsea", "Clara", "Cornelia", "Cinta", "Cinthia", "Ciaobella", "Cici", "Carla", "Calista", "Devi", "Dewi", "Dian", "Diah", "Diana", "Dina", "Dinda", "Dalima", "Dwi", "Dyah", "Ditya", "Eka", "Eva", "Endah", "Elisa", "Eli", "Ella", "Ellis", "Elma", "Elvina", "Fitria", "Fitriani", "Febi", "Faizah", "Farah", "Farhunnisa", "Fathonah", "Febrina", "Febriana", "Fitri", "Fara", "Gabriella", "Gasti", "Gawati", "Genta", "Ghaliyati", "Gina", "Gilda", "Ganesha", "Gadis", "Halima", "Hesti", "Hilda", "Hafshah", "Hamima", "Hana", "Hani", "Hasna", "Humaira", "Ika", "Indah", "Intan", "Irma", "Icha", "Ida", "Ifa", "Ilsa", "Ina", "Ira", "Iriana", "Irawati", "Indira", "Jamalia", "Janet", "Jane", "Julia", "Juli", "Jessica", "Jasmin", "Jelita", "Kamaria", "Kamila", "Kani", "Karen", "Karimah", "Kartika", "Kasiyah", "Keisha", "Kezia", "Kiandra", "Kayla", "Kania", "Kirana", "Lala", "Lalita", "Latika", "Laila", "Laras", "Lidya", "Lili", "Lintang", "Lestari", "Linda", "Laksita", "Maria", "Mala", "Maya", "Maida", "Maimunah", "Melinda", "Mila", "Mutia", "Michelle", "Malika", "Melani", "Nadia", "Nadine", "Nabila", "Natalia", "Novi", "Nova", "Nurul", "Nilam", "Najwa", "Nada", "Naura", "Nur", "Novita", "Nimas", "Noviana", "Olivia", "Ophelia", "Oni", "Oliva", "Padma", "Putri", "Paramita", "Paris", "Patricia", "Paulin", "Puput", "Puji", "Pia", "Puspa", "Puti", "Padmi", "Puspita", "Pratiwi", "Prita", "Qori", "Queen", "Ratih", "Ratna", "Restu", "Rini", "Rika", "Rina", "Rahayu", "Rahmi", "Rachel", "Raisa", "Raina", "Rahmawati", "Retno", "Ria", "Rosalina", "Rita", "Rosa", "Sarah", "Sari", "Siti", "Siska", "Suci", "Syahrini", "Septi", "Sadina", "Safina", "Sakura", "Salimah", "Salwa", "Salsabila", "Samiah", "Shania", "Sabrina", "Silvia", "Shakila", "Sintia", "Sartika", "Safira", "Sasha", "Sherly", "Talia", "Tami", "Tira", "Tiara", "Titin", "Tania", "Tina", "Tantri", "Tari", "Titi", "Tri", "Tsabita", "Uchita", "Unjani", "Ulya", "Uli", "Ulva", "Umi", "Usyi", "Vanya", "Vanesa", "Vivi", "Vera", "Vicky", "Victoria", "Violet", "Vania", "Winda", "Widya", "Wulan", "Wirda", "Wani", "Wulandari", "Yani", "Yessi", "Yulia", "Yuliana", "Yuni", "Yunita", "Yance", "Zahra", "Zalindra", "Zaenab", "Zulfa", "Zizi", "Zulaikha", "Zamira", "Zelda", "Zelaya"];