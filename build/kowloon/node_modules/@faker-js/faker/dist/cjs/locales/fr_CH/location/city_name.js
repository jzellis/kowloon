"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var l = Object.defineProperty;
var a = Object.getOwnPropertyDescriptor;
var s = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var u = function u(n, e) {
    for (var r in e) l(n, r, {
      get: e[r],
      enumerable: !0
    });
  },
  h = function h(n, e, r, o) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(s(e)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !t.call(n, i) && i !== r && l(n, i, {
            get: function get() {
              return e[i];
            },
            enumerable: !(o = a(e, i)) || o.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var f = function f(n) {
  return h(l({}, "__esModule", {
    value: !0
  }), n);
};
var g = {};
u(g, {
  "default": function _default() {
    return c;
  }
});
module.exports = f(g);
var c = ["Aarau", "Adliswil", "Aesch", "Affoltern am Albis", "Aigle", "Allschwil", "Altdorf", "Altst\xE4tten", "Amriswil", "Appenzell", "Arbon", "Arlesheim", "Arosa", "Arth", "Baar", "Baden", "Bassersdorf", "Bellinzone", "Belp", "Berne", "Berthoud", "Bienne", "Binningen", "Birsfelden", "Brigue-Glis", "Brugg", "Buchs", "Bulle", "Bussigny", "B\xE2le", "B\xFClach", "Carouge", "Cham", "Chiasso", "Ch\xEAne-Bougeries", "Coire", "Crissier", "Davos", "Del\xE9mont", "Dietikon", "D\xFCbendorf", "Ebikon", "Einsiedeln", "Emmen", "Flawil", "Frauenfeld", "Freienbach", "Fribourg", "Gen\xE8ve", "Gland", "Glaris Centre", "Glaris Nord", "Gossau", "Granges", "Herisau", "Hinwil", "Horgen", "Horw", "Illnau-Effretikon", "Interlaken", "Ittigen", "Kloten", "Kreuzlingen", "Kriens", "K\xF6niz", "K\xFCsnacht", "La Chaux-de-Fonds", "La Neuveville", "La Tour-de-Peilz", "Lancy", "Langenthal", "Lausanne", "Le Grand-Saconnex", "Le Locle", "Lenzbourg", "Liestal", "Locarno", "Lucerne", "Lugano", "Lyss", "Martigny", "Meilen", "Mendrisio", "Meyrin", "Monthey", "Montreux", "Morat", "Morges", "Moutier", "Muri bei Bern", "Muttenz", "M\xE4nnedorf", "M\xF6hlin", "M\xFCnchenbuchsee", "M\xFCnchenstein", "M\xFCnsingen", "Neuch\xE2tel", "Neuhausen am Rheinfall", "Nyon", "Oberwil", "Oftringen", "Olten", "Onex", "Opfikon", "Ostermundigen", "Payerne", "Peseux", "Pf\xE4ffikon", "Plan-les-Ouates", "Poliez-Pittet", "Porrentruy", "Pratteln", "Prilly", "Pully", "Rapperswil-Jona", "Regensdorf", "Reinach", "Renens", "Rheinfelden", "Richterswil", "Riehen", "Risch-Rotkreuz", "Romanshorn", "Rorschach", "R\xFCti", "Saint-Gall", "Saint-Moritz", "Sarnen", "Schaffhouse", "Schlieren", "Schwytz", "Sierre", "Sion", "Soleure", "Spiez", "Spreitenbach", "Stans", "Steffisburg", "Steinhausen", "St\xE4fa", "Suhr", "Sursee", "Thalwil", "Thoune", "Th\xF4nex", "Urdorf", "Uster", "Uzwil", "Vernier", "Versoix", "Vevey", "Veyrier", "Villars-sur-Gl\xE2ne", "Vi\xE8ge", "Volketswil", "Wallisellen", "Weinfelden", "Wettingen", "Wetzikon", "Wil", "Winterthour", "Wohlen", "Worb", "W\xE4denswil", "Yverdon-les-Bains", "Zermatt", "Zofingue", "Zollikofen", "Zollikon", "Zoug", "Zuchwil", "Zurich", "\xC9cublens"];