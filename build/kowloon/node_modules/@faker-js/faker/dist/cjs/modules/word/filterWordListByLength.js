"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var a = Object.defineProperty;
var c = Object.getOwnPropertyDescriptor;
var y = Object.getOwnPropertyNames;
var f = Object.prototype.hasOwnProperty;
var b = function b(e, t) {
    for (var n in t) a(e, n, {
      get: t[n],
      enumerable: !0
    });
  },
  x = function x(e, t, n, r) {
    if (t && _typeof(t) == "object" || typeof t == "function") {
      var _iterator = _createForOfIteratorHelper(y(t)),
        _step;
      try {
        var _loop = function _loop() {
          var s = _step.value;
          !f.call(e, s) && s !== n && a(e, s, {
            get: function get() {
              return t[s];
            },
            enumerable: !(r = c(t, s)) || r.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var p = function p(e) {
  return x(a({}, "__esModule", {
    value: !0
  }), e);
};
var d = {};
b(d, {
  filterWordListByLength: function filterWordListByLength() {
    return R;
  }
});
module.exports = p(d);
var u = require("../../errors/faker-error");
var m = {
  fail: function fail() {
    throw new u.FakerError("No words found that match the given length.");
  },
  closest: function closest(e, t) {
    var n = e.reduce(function (g, l) {
        var h;
        return (g[l.length] = (h = g[l.length]) != null ? h : []).push(l), g;
      }, {}),
      r = Object.keys(n).map(Number),
      s = Math.min.apply(Math, _toConsumableArray(r)),
      o = Math.max.apply(Math, _toConsumableArray(r)),
      i = Math.min(t.min - s, o - t.max);
    return e.filter(function (g) {
      return g.length === t.min - i || g.length === t.max + i;
    });
  },
  shortest: function shortest(e) {
    var t = Math.min.apply(Math, _toConsumableArray(e.map(function (n) {
      return n.length;
    })));
    return e.filter(function (n) {
      return n.length === t;
    });
  },
  longest: function longest(e) {
    var t = Math.max.apply(Math, _toConsumableArray(e.map(function (n) {
      return n.length;
    })));
    return e.filter(function (n) {
      return n.length === t;
    });
  },
  "any-length": function anyLength(e) {
    return _toConsumableArray(e);
  }
};
function R(e) {
  var t = e.wordList,
    n = e.length,
    _e$strategy = e.strategy,
    r = _e$strategy === void 0 ? "any-length" : _e$strategy;
  if (n) {
    var s = typeof n == "number" ? function (i) {
        return i.length === n;
      } : function (i) {
        return i.length >= n.min && i.length <= n.max;
      },
      o = t.filter(s);
    return o.length > 0 ? o : typeof n == "number" ? m[r](t, {
      min: n,
      max: n
    }) : m[r](t, n);
  } else if (r === "shortest" || r === "longest") return m[r](t);
  return _toConsumableArray(t);
}
0 && (module.exports = {
  filterWordListByLength: filterWordListByLength
});