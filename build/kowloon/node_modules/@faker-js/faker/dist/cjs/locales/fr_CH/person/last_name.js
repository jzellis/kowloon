"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var a = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var t = Object.getOwnPropertyNames;
var l = Object.prototype.hasOwnProperty;
var d = function d(r, e) {
    for (var i in e) a(r, i, {
      get: e[i],
      enumerable: !0
    });
  },
  h = function h(r, e, i, n) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(t(e)),
        _step;
      try {
        var _loop = function _loop() {
          var o = _step.value;
          !l.call(r, o) && o !== i && a(r, o, {
            get: function get() {
              return e[o];
            },
            enumerable: !(n = u(e, o)) || n.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return r;
  };
var s = function s(r) {
  return h(a({}, "__esModule", {
    value: !0
  }), r);
};
var c = {};
d(c, {
  "default": function _default() {
    return g;
  }
});
module.exports = s(c);
var g = ["Abegglen", "Ackermann", "Aebischer", "Aeby", "Aigroz", "Aregger", "Bagnoud", "Ballouhey", "Balmer", "Barras", "Bavaud", "Beerli", "Berney", "Berset", "Berthoud", "Beyeler", "Bidaud", "Bideau", "Blanc", "Blatter", "Blazer", "Bolle", "Borgeaud", "Bossard", "Bosson", "Bossy", "Bourcard", "Bourgeois", "Br\xE4ndli", "Brogli", "Br\xFCgger", "Burckhardt", "Burkhard", "Burkhardt", "Caillat", "Cailler", "Calame", "Cali", "Chappuis", "Chapuis", "Chapuisat", "Chassot", "Chollet", "Chopard", "Choquart", "Chuit", "Clerc", "Cloos", "Clottu", "Coinchon", "Corboz", "Cottier", "Coulon", "Courten", "Cuche", "Dallenbach", "De Pury", "Denzler", "Dietsche", "Droz", "Dubochet", "Dubuis", "Ducommun", "Ducret", "Dutoit", "\xC9coffey", "Egli", "Emery", "Emig", "Fankhauser", "Fauche", "Favre", "Felber", "Fl\xFCckiger", "Foretay", "Frey", "Freymond", "Friedli", "Funk", "G\xE4hwiler", "Gehrig", "Geisendorf", "Genoud", "Gerwig", "Gilli\xE9ron", "Girard", "Girardet", "Glasson", "Graber", "Grandjean", "Groebli", "Grosjean", "Guinand", "H\xE4nni", "Hediger", "Hennezel", "Henri", "Hochstrasser", "Hofer", "Hollard", "Hommel", "Honegger", "Hottinguer", "Huguenin", "Humbert-Droz", "Huwiler", "Jeanneret", "K\xE4lin", "Kolly", "Kr\xFCgel", "Kubli", "K\xFCng", "Kunz", "Lambelet", "Leuba", "Leutenegger", "Loup", "Marcet", "Matthey", "Meichtry", "Meier", "Menu", "Merian", "Mermoud", "Meylan", "Monnard", "Monod", "Morax", "Moraz", "Moser", "Mottet", "Muschg", "Musy", "Nauer", "Niggeler", "Oberlin", "Oppliger", "Ostervald", "Parlier", "Perret", "Perrier", "Perrin", "Perroy", "Piaget", "Pictet", "Piguet", "Pinon", "Pittard", "Plomb", "Pury", "Python", "Quartenoud", "Quinodoz", "Racordon", "Ravet", "Reymond", "Reynold", "Ribaupierre", "Riner", "RIS", "Ritz", "Rochaix", "Rochat", "Romy", "R\xF6thlisberger", "Rougemont", "Roulin", "Rousseau", "R\xFCttimann", "Sandoz", "Saussure", "Savary", "Scheurer", "Schmid", "Schnider", "Schnyder", "Schorderet", "Schrepfer", "Schweitz", "Schweizer", "Schwizgebel", "Simmen", "Simonet", "Soutter", "Spoerri", "Sprunger", "Suter", "Sutermeister", "Sutz", "Tinguely", "Tissot", "Toma", "Torriani", "Tschudi", "Vallet", "Wasser", "Wehrle", "Welti", "Widmer"];