"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var o = Object.defineProperty;
var p = Object.getOwnPropertyDescriptor;
var a = Object.getOwnPropertyNames;
var x = Object.prototype.hasOwnProperty;
var m = function m(n, e) {
    for (var s in e) o(n, s, {
      get: e[s],
      enumerable: !0
    });
  },
  l = function l(n, e, s, t) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(a(e)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !x.call(n, i) && i !== s && o(n, i, {
            get: function get() {
              return e[i];
            },
            enumerable: !(t = p(e, i)) || t.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var c = function c(n) {
  return l(o({}, "__esModule", {
    value: !0
  }), n);
};
var g = {};
m(g, {
  "default": function _default() {
    return d;
  }
});
module.exports = c(g);
var d = {
  "application/epub+zip": {
    extensions: ["epub"]
  },
  "application/gzip": {
    extensions: ["gz"]
  },
  "application/java-archive": {
    extensions: ["jar", "war", "ear"]
  },
  "application/json": {
    extensions: ["json", "map"]
  },
  "application/ld+json": {
    extensions: ["jsonld"]
  },
  "application/msword": {
    extensions: ["doc", "dot"]
  },
  "application/octet-stream": {
    extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
  },
  "application/ogg": {
    extensions: ["ogx"]
  },
  "application/pdf": {
    extensions: ["pdf"]
  },
  "application/rtf": {
    extensions: ["rtf"]
  },
  "application/vnd.amazon.ebook": {
    extensions: ["azw"]
  },
  "application/vnd.apple.installer+xml": {
    extensions: ["mpkg"]
  },
  "application/vnd.mozilla.xul+xml": {
    extensions: ["xul"]
  },
  "application/vnd.ms-excel": {
    extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
  },
  "application/vnd.ms-fontobject": {
    extensions: ["eot"]
  },
  "application/vnd.ms-powerpoint": {
    extensions: ["ppt", "pps", "pot"]
  },
  "application/vnd.oasis.opendocument.presentation": {
    extensions: ["odp"]
  },
  "application/vnd.oasis.opendocument.spreadsheet": {
    extensions: ["ods"]
  },
  "application/vnd.oasis.opendocument.text": {
    extensions: ["odt"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
    extensions: ["pptx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
    extensions: ["xlsx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
    extensions: ["docx"]
  },
  "application/vnd.rar": {
    extensions: ["rar"]
  },
  "application/vnd.visio": {
    extensions: ["vsd", "vst", "vss", "vsw"]
  },
  "application/x-7z-compressed": {
    extensions: ["7z"]
  },
  "application/x-abiword": {
    extensions: ["abw"]
  },
  "application/x-bzip": {
    extensions: ["bz"]
  },
  "application/x-bzip2": {
    extensions: ["bz2", "boz"]
  },
  "application/x-csh": {
    extensions: ["csh"]
  },
  "application/x-freearc": {
    extensions: ["arc"]
  },
  "application/x-httpd-php": {
    extensions: ["php"]
  },
  "application/x-sh": {
    extensions: ["sh"]
  },
  "application/x-tar": {
    extensions: ["tar"]
  },
  "application/xhtml+xml": {
    extensions: ["xhtml", "xht"]
  },
  "application/xml": {
    extensions: ["xml", "xsl", "xsd", "rng"]
  },
  "application/zip": {
    extensions: ["zip"]
  },
  "audio/3gpp": {
    extensions: ["3gpp"]
  },
  "audio/3gpp2": {
    extensions: ["3g2"]
  },
  "audio/aac": {
    extensions: ["aac"]
  },
  "audio/midi": {
    extensions: ["mid", "midi", "kar", "rmi"]
  },
  "audio/mpeg": {
    extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
  },
  "audio/ogg": {
    extensions: ["oga", "ogg", "spx", "opus"]
  },
  "audio/opus": {
    extensions: ["opus"]
  },
  "audio/wav": {
    extensions: ["wav"]
  },
  "audio/webm": {
    extensions: ["weba"]
  },
  "font/otf": {
    extensions: ["otf"]
  },
  "font/ttf": {
    extensions: ["ttf"]
  },
  "font/woff": {
    extensions: ["woff"]
  },
  "font/woff2": {
    extensions: ["woff2"]
  },
  "image/avif": {
    extensions: ["avif"]
  },
  "image/bmp": {
    extensions: ["bmp"]
  },
  "image/gif": {
    extensions: ["gif"]
  },
  "image/jpeg": {
    extensions: ["jpeg", "jpg", "jpe"]
  },
  "image/png": {
    extensions: ["png"]
  },
  "image/svg+xml": {
    extensions: ["svg", "svgz"]
  },
  "image/tiff": {
    extensions: ["tif", "tiff"]
  },
  "image/vnd.microsoft.icon": {
    extensions: ["ico"]
  },
  "image/webp": {
    extensions: ["webp"]
  },
  "text/calendar": {
    extensions: ["ics", "ifb"]
  },
  "text/css": {
    extensions: ["css"]
  },
  "text/csv": {
    extensions: ["csv"]
  },
  "text/html": {
    extensions: ["html", "htm", "shtml"]
  },
  "text/javascript": {
    extensions: ["js", "mjs"]
  },
  "text/plain": {
    extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
  },
  "video/3gpp": {
    extensions: ["3gp", "3gpp"]
  },
  "video/3gpp2": {
    extensions: ["3g2"]
  },
  "video/mp2t": {
    extensions: ["ts"]
  },
  "video/mp4": {
    extensions: ["mp4", "mp4v", "mpg4"]
  },
  "video/mpeg": {
    extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
  },
  "video/ogg": {
    extensions: ["ogv"]
  },
  "video/webm": {
    extensions: ["webm"]
  },
  "video/x-msvideo": {
    extensions: ["avi"]
  }
};