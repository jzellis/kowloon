"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e12) { throw _e12; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e13) { didErr = true; err = _e13; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var b = Object.defineProperty;
var k = Object.getOwnPropertyDescriptor;
var y = Object.getOwnPropertyNames;
var v = Object.prototype.hasOwnProperty;
var E = function E(o, e) {
    for (var r in e) b(o, r, {
      get: e[r],
      enumerable: !0
    });
  },
  M = function M(o, e, r, i) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(y(e)),
        _step;
      try {
        var _loop = function _loop() {
          var t = _step.value;
          !v.call(o, t) && t !== r && b(o, t, {
            get: function get() {
              return e[t];
            },
            enumerable: !(i = k(e, t)) || i.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return o;
  };
var x = function x(o) {
  return M(b({}, "__esModule", {
    value: !0
  }), o);
};
var D = {};
E(D, {
  LocationModule: function LocationModule() {
    return d;
  }
});
module.exports = x(D);
var f = require("../../errors/faker-error"),
  a = require("../../internal/deprecated");
var d = /*#__PURE__*/function () {
  function d(e) {
    _classCallCheck(this, d);
    this.faker = e;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(d.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var r = _step2.value;
        r === "constructor" || typeof this[r] != "function" || (this[r] = this[r].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(d, [{
    key: "zipCode",
    value: function zipCode() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "string" && (e = {
        format: e
      });
      var _e = e,
        r = _e.state;
      if (r) {
        var t = this.faker.definitions.location.postcode_by_state[r];
        if (t) return String(this.faker.number["int"](t));
        throw new f.FakerError("No zip code definition found for state \"".concat(r, "\""));
      }
      var _e2 = e,
        _e2$format = _e2.format,
        i = _e2$format === void 0 ? this.faker.definitions.location.postcode : _e2$format;
      return typeof i == "string" && (i = [i]), i = this.faker.helpers.arrayElement(i), this.faker.helpers.replaceSymbols(i);
    }
  }, {
    key: "zipCodeByState",
    value: function zipCodeByState() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, a.deprecated)({
        deprecated: "faker.location.zipCodeByState",
        proposed: "faker.location.zipCode({ state })",
        since: "8.0",
        until: "9.0"
      }), typeof e == "string" && (e = {
        state: e
      });
      var _e3 = e,
        r = _e3.state;
      return this.zipCode({
        state: r
      });
    }
  }, {
    key: "city",
    value: function city() {
      return this.faker.helpers.fake(this.faker.definitions.location.city_pattern);
    }
  }, {
    key: "cityName",
    value: function cityName() {
      return (0, a.deprecated)({
        deprecated: "faker.location.cityName",
        proposed: "faker.location.city",
        since: "8.0",
        until: "9.0"
      }), this.faker.helpers.arrayElement(this.faker.definitions.location.city_name);
    }
  }, {
    key: "buildingNumber",
    value: function buildingNumber() {
      var _this = this;
      return this.faker.helpers.arrayElement(this.faker.definitions.location.building_number).replace(/#+/g, function (e) {
        return _this.faker.string.numeric({
          length: e.length,
          allowLeadingZeros: !1
        });
      });
    }
  }, {
    key: "street",
    value: function street() {
      return this.faker.helpers.fake(this.faker.definitions.location.street_pattern);
    }
  }, {
    key: "streetName",
    value: function streetName() {
      return (0, a.deprecated)({
        deprecated: "faker.location.streetName",
        proposed: "faker.location.street",
        since: "8.0",
        until: "9.0"
      }), this.faker.helpers.arrayElement(this.faker.definitions.location.street_name);
    }
  }, {
    key: "streetAddress",
    value: function streetAddress() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "boolean" && (e = {
        useFullAddress: e
      });
      var _e4 = e,
        r = _e4.useFullAddress,
        t = this.faker.definitions.location.street_address[r ? "full" : "normal"];
      return this.faker.helpers.fake(t);
    }
  }, {
    key: "secondaryAddress",
    value: function secondaryAddress() {
      var _this2 = this;
      return this.faker.helpers.arrayElement(this.faker.definitions.location.secondary_address).replace(/#+/g, function (e) {
        return _this2.faker.string.numeric({
          length: e.length,
          allowLeadingZeros: !1
        });
      });
    }
  }, {
    key: "county",
    value: function county() {
      return this.faker.helpers.arrayElement(this.faker.definitions.location.county);
    }
  }, {
    key: "country",
    value: function country() {
      return this.faker.helpers.arrayElement(this.faker.definitions.location.country);
    }
  }, {
    key: "countryCode",
    value: function countryCode() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "string" && (e = {
        variant: e
      });
      var _e5 = e,
        _e5$variant = _e5.variant,
        r = _e5$variant === void 0 ? "alpha-2" : _e5$variant,
        i = r === "alpha-3" ? "alpha3" : "alpha2";
      return this.faker.helpers.arrayElement(this.faker.definitions.location.country_code)[i];
    }
  }, {
    key: "state",
    value: function state() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _e$abbreviated = e.abbreviated,
        r = _e$abbreviated === void 0 ? !1 : _e$abbreviated,
        i = r ? this.faker.definitions.location.state_abbr : this.faker.definitions.location.state;
      return this.faker.helpers.arrayElement(i);
    }
  }, {
    key: "stateAbbr",
    value: function stateAbbr() {
      return (0, a.deprecated)({
        deprecated: "faker.location.stateAbbr()",
        proposed: "faker.location.state({ abbreviated: true })",
        since: "8.0",
        until: "9.0"
      }), this.state({
        abbreviated: !0
      });
    }
  }, {
    key: "latitude",
    value: function latitude() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -90;
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;
      typeof e == "number" && (e = {
        max: e
      });
      var _e6 = e,
        _e6$max = _e6.max,
        t = _e6$max === void 0 ? 90 : _e6$max,
        _e6$min = _e6.min,
        s = _e6$min === void 0 ? r : _e6$min,
        _e6$precision = _e6.precision,
        l = _e6$precision === void 0 ? i : _e6$precision;
      return this.faker.number["float"]({
        min: s,
        max: t,
        precision: Math.pow(10, -l)
      });
    }
  }, {
    key: "longitude",
    value: function longitude() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -180;
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;
      typeof e == "number" && (e = {
        max: e
      });
      var _e7 = e,
        _e7$max = _e7.max,
        t = _e7$max === void 0 ? 180 : _e7$max,
        _e7$min = _e7.min,
        s = _e7$min === void 0 ? r : _e7$min,
        _e7$precision = _e7.precision,
        l = _e7$precision === void 0 ? i : _e7$precision;
      return this.faker.number["float"]({
        max: t,
        min: s,
        precision: Math.pow(10, -l)
      });
    }
  }, {
    key: "direction",
    value: function direction() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "boolean" && ((0, a.deprecated)({
        deprecated: "faker.location.direction(abbreviated)",
        proposed: "faker.location.direction({ abbreviated })",
        since: "8.0",
        until: "9.0"
      }), e = {
        abbreviated: e
      });
      var _e8 = e,
        _e8$abbreviated = _e8.abbreviated,
        r = _e8$abbreviated === void 0 ? !1 : _e8$abbreviated;
      return r ? this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr) : this.faker.helpers.arrayElement(this.faker.definitions.location.direction);
    }
  }, {
    key: "cardinalDirection",
    value: function cardinalDirection() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "boolean" && ((0, a.deprecated)({
        deprecated: "faker.location.cardinalDirection(abbreviated)",
        proposed: "faker.location.cardinalDirection({ abbreviated })",
        since: "8.0",
        until: "9.0"
      }), e = {
        abbreviated: e
      });
      var _e9 = e,
        _e9$abbreviated = _e9.abbreviated,
        r = _e9$abbreviated === void 0 ? !1 : _e9$abbreviated;
      return r ? this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(0, 4)) : this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(0, 4));
    }
  }, {
    key: "ordinalDirection",
    value: function ordinalDirection() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      typeof e == "boolean" && ((0, a.deprecated)({
        deprecated: "faker.location.ordinalDirection(abbreviated)",
        proposed: "faker.location.ordinalDirection({ abbreviated })",
        since: "8.0",
        until: "9.0"
      }), e = {
        abbreviated: e
      });
      var _e10 = e,
        _e10$abbreviated = _e10.abbreviated,
        r = _e10$abbreviated === void 0 ? !1 : _e10$abbreviated;
      return r ? this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(4, 8)) : this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(4, 8));
    }
  }, {
    key: "nearbyGPSCoordinate",
    value: function nearbyGPSCoordinate() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
      Array.isArray(e) && ((0, a.deprecated)({
        deprecated: "faker.location.nearbyGPSCoordinate(coordinate, radius, isMetric)",
        proposed: "faker.location.nearbyGPSCoordinate({ origin, radius, isMetric })",
        since: "8.0",
        until: "9.0"
      }), e = {
        origin: e
      });
      var _e11 = e,
        t = _e11.origin,
        _e11$radius = _e11.radius,
        s = _e11$radius === void 0 ? r : _e11$radius,
        _e11$isMetric = _e11.isMetric,
        l = _e11$isMetric === void 0 ? i : _e11$isMetric;
      if (t == null) return [this.latitude(), this.longitude()];
      var c = this.faker.number["float"]({
          max: 2 * Math.PI,
          precision: 1e-5
        }),
        m = l ? s : s * 1.60934,
        h = .995,
        g = this.faker.number["float"]({
          max: m,
          precision: .001
        }) * h,
        p = 4e4 / 360,
        u = g / p,
        n = [t[0] + Math.sin(c) * u, t[1] + Math.cos(c) * u];
      return n[0] = n[0] % 180, (n[0] < -90 || n[0] > 90) && (n[0] = Math.sign(n[0]) * 180 - n[0], n[1] += 180), n[1] = (n[1] % 360 + 540) % 360 - 180, [n[0], n[1]];
    }
  }, {
    key: "timeZone",
    value: function timeZone() {
      return this.faker.helpers.arrayElement(this.faker.definitions.location.time_zone);
    }
  }]);
  return d;
}();
0 && (module.exports = {
  LocationModule: LocationModule
});