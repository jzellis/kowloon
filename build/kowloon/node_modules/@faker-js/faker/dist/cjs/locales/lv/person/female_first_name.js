"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var t = Object.defineProperty;
var i = Object.getOwnPropertyDescriptor;
var d = Object.getOwnPropertyNames;
var u = Object.prototype.hasOwnProperty;
var L = function L(e, a) {
    for (var r in a) t(e, r, {
      get: a[r],
      enumerable: !0
    });
  },
  j = function j(e, a, r, l) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(d(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !u.call(e, n) && n !== r && t(e, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(l = i(a, n)) || l.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var m = function m(e) {
  return j(t({}, "__esModule", {
    value: !0
  }), e);
};
var v = {};
L(v, {
  "default": function _default() {
    return s;
  }
});
module.exports = m(v);
var s = ["A\u012Bda", "Akvel\u012Bna", "Albert\u012Bne", "Alv\u012Bne", "Am\u0101lija", "Astr\u012Bda", "Aur\u0113lija", "\u0100rija", "Ba\u0146uta", "B\u0101rbala", "Be\u0101te", "Dagm\u0101ra", "Dainuv\u012Bte", "D\u0101rta", "Di\u0101na", "Dzirkst\u012Bte", "Dz\u012Ble", "Ed\u012Bte", "Elfr\u012Bda", "El\u012Bna", "El\u012Bza", "Elm\u012Bra", "Elv\u012Bra", "Em\u012Blija", "Ernest\u012Bne", "Evel\u012Bna", "\u0112rika", "Fr\u012Bda", "Gabriela", "Gudr\u012Bte", "\u0122ertr\u016Bde", "Hel\u0113na", "Herm\u012Bne", "In\u0101ra", "Ingr\u012Bda", "Ing\u016Bna", "Ir\u0113na", "\u012Arisa", "Jan\u012Bna", "Jasm\u012Bna", "Jautr\u012Bte", "Jud\u012Bte", "Just\u012Bne", "J\u016Blija", "J\u016Bsma", "Kar\u012Bna", "Katr\u012Bna", "Kl\u0101ra", "Kristi\u0101na", "Krist\u012Bne", "Lav\u012Bze", "L\u0101sma", "Leon\u012Bda", "Leont\u012Bne", "Li\u0101na", "Lili\u0101na", "L\u012Bba", "L\u012Bga", "L\u012Bksma", "L\u012Bna", "L\u012Bva", "L\u012Bvija", "L\u012Bze", "Lu\u012Bze", "L\u016Bcija", "Malv\u012Bne", "M\u0101ra", "M\u0101r\u012Bte", "M\u0113tra", "Modr\u012Bte", "Mud\u012Bte", "Ol\u012Bvija", "Ot\u012Blija", "Patr\u012Bcija", "Paul\u012Bne", "P\u0101rsla", "Reg\u012Bna", "Ren\u0101te", "Rud\u012Bte", "R\u016Bta", "Sab\u012Bne", "Sarm\u012Bte", "Saulcer\u012Bte", "Skaidr\u012Bte", "Sp\u012Bdola", "Tam\u0101ra", "Ter\u0113ze", "T\u012Bna", "Tr\u012Bne", "Und\u012Bne", "Valent\u012Bna", "Val\u0113rija", "V\u0113sma", "Vijol\u012Bte", "Vilhelm\u012Bne", "Vizbul\u012Bte", "Zelt\u012Bte", "Zied\u012Bte", "Zigfr\u012Bda", "Zigr\u012Bda", "Z\u012Ble", "\u017Danete", "\u017Danna", "\u017Denija", "\u017Dub\u012Bte"];