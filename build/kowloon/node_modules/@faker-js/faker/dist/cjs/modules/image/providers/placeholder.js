"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var t = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var g = Object.getOwnPropertyNames;
var m = Object.prototype.hasOwnProperty;
var d = function d(p, r) {
    for (var e in r) t(p, e, {
      get: r[e],
      enumerable: !0
    });
  },
  k = function k(p, r, e, n) {
    if (r && _typeof(r) == "object" || typeof r == "function") {
      var _iterator = _createForOfIteratorHelper(g(r)),
        _step;
      try {
        var _loop = function _loop() {
          var a = _step.value;
          !m.call(p, a) && a !== e && t(p, a, {
            get: function get() {
              return r[a];
            },
            enumerable: !(n = u(r, a)) || n.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return p;
  };
var b = function b(p) {
  return k(t({}, "__esModule", {
    value: !0
  }), p);
};
var h = {};
d(h, {
  Placeholder: function Placeholder() {
    return i;
  }
});
module.exports = b(h);
var l = require("../../../internal/deprecated");
var i = /*#__PURE__*/function () {
  function i(r) {
    _classCallCheck(this, i);
    this.faker = r;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(i.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var e = _step2.value;
        e === "constructor" || typeof this[e] != "function" || (this[e] = this[e].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(i, [{
    key: "imageUrl",
    value: function imageUrl(r, e, n, a, s, c) {
      (0, l.deprecated)({
        deprecated: "faker.placeholder.imageUrl",
        proposed: "faker.image.urlPlaceholder",
        since: "8.0",
        until: "9.0"
      }), r = r || 640, e = e || r;
      var o = "https://via.placeholder.com";
      if (o += "/".concat(r, "x").concat(e), s != null && (o += "/".concat(s.replace("#", "").toUpperCase()), c != null && (o += "/".concat(c.replace("#", "").toUpperCase()))), a != null && (o += ".".concat(a)), n != null) {
        var f = new URLSearchParams({
          text: n
        });
        o += "?".concat(f.toString());
      }
      return o;
    }
  }, {
    key: "randomUrl",
    value: function randomUrl(r, e, n) {
      return (0, l.deprecated)({
        deprecated: "faker.placeholder.randomUrl",
        proposed: "faker.image.urlPlaceholder",
        since: "8.0",
        until: "9.0"
      }), this.imageUrl(r, e, this.faker.lorem.word(), n, this.faker.color.rgb({
        casing: "upper",
        prefix: ""
      }), this.faker.color.rgb({
        casing: "upper",
        prefix: ""
      }));
    }
  }]);
  return i;
}();
0 && (module.exports = {
  Placeholder: Placeholder
});