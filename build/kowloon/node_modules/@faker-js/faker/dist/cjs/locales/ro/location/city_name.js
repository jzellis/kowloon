"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var l = Object.getOwnPropertyDescriptor;
var o = Object.getOwnPropertyNames;
var t = Object.prototype.hasOwnProperty;
var c = function c(a, i) {
    for (var u in i) r(a, u, {
      get: i[u],
      enumerable: !0
    });
  },
  d = function d(a, i, u, n) {
    if (i && _typeof(i) == "object" || typeof i == "function") {
      var _iterator = _createForOfIteratorHelper(o(i)),
        _step;
      try {
        var _loop = function _loop() {
          var e = _step.value;
          !t.call(a, e) && e !== u && r(a, e, {
            get: function get() {
              return i[e];
            },
            enumerable: !(n = l(i, e)) || n.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var g = function g(a) {
  return d(r({}, "__esModule", {
    value: !0
  }), a);
};
var S = {};
c(S, {
  "default": function _default() {
    return B;
  }
});
module.exports = g(S);
var B = ["Bucure\u0219ti", "Cluj-Napoca", "Timi\u0219oara", "Ia\u0219i", "Constan\u021Ba", "Craiova", "Bra\u0219ov", "Gala\u021Bi", "Ploie\u0219ti", "Oradea", "Br\u0103ila", "Arad", "Pite\u0219ti", "Sibiu", "Bac\u0103u", "T\xE2rgu Mure\u0219", "Baia Mare", "Buz\u0103u", "Boto\u0219ani", "Satu Mare", "R\xE2mnicu V\xE2lcea", "Drobeta-Turnu Severin", "Suceava", "Piatra Neam\u021B", "T\xE2rgu Jiu", "T\xE2rgovi\u0219te", "Foc\u0219ani", "Bistri\u021Ba", "Re\u0219i\u021Ba", "Tulcea", "C\u0103l\u0103ra\u0219i", "Alba Iulia", "Giurgiu", "Deva", "Hunedoara", "Zal\u0103u", "Sf\xE2ntu Gheorghe", "B\xE2rlad", "Vaslui", "1387", "Slobozia", "Turda", "Media\u0219", "Voluntari", "Lugoj", "Medgidia", "One\u0219ti", "Miercurea Ciuc", "Sighetu Marma\u021Biei", "Petro\u0219ani", "Mangalia", "Tecuci", "R\xE2mnicu S\u0103rat", "Pa\u0219cani", "Dej", "Reghin", "N\u0103vodari", "Odorheiu Secuiesc", "C\xE2mpina", "Mioveni", "C\xE2mpulung", "Caracal", "S\u0103cele", "F\u0103g\u0103ra\u0219", "Fete\u0219ti", "Sighi\u0219oara", "Bor\u0219a", "Ro\u0219iorii de Vede", "Curtea de Arge\u0219", "Sebe\u0219", "Hu\u0219i", "F\u0103lticeni", "Pantelimon", "Olteni\u021Ba", "Turnu M\u0103gurele", "Caransebe\u0219", "Dorohoi", "R\u0103d\u0103u\u021Bi", "Z\u0103rne\u0219ti", "Lupeni", "Aiud", "Petrila", "Buftea", "Moine\u0219ti", "T\xE2rn\u0103veni", "C\xE2mpia Turzii", "Pope\u0219ti-Leordeni", "Gherla", "Carei", "Cugir", "Blaj", "Codlea", "Com\u0103ne\u0219ti", "T\xE2rgu Neam\u021B", "Motru", "T\xE2rgu Secuiesc", "Moreni", "Gheorgheni", "B\u0103icoi", "Or\u0103\u0219tie", "Salonta", "Bal\u0219", "Dr\u0103g\u0103\u0219ani", "B\u0103ile\u0219ti", "Calafat", "Filia\u0219i", "Cernavod\u0103", "C\xE2mpulung Moldovenesc", "Breaza", "Marghita", "Baia Sprie", "Ludu\u0219", "Corabia", "Adjud", "Vi\u0219eu de Sus", "Bragadiru", "Boc\u0219a", "R\xE2\u0219nov", "Urziceni", "Pucioasa", "Vatra Dornei", "Cisn\u0103die", "Mizil", "Topli\u021Ba", "Chitila", "\u0218imleu Silvaniei", "Buhu\u0219i", "Vicovu de Sus", "Zimnicea", "G\u0103e\u0219ti", "Gura Humorului", "Otopeni", "Ocna Mure\u0219", "Avrig", "Simeria", "Pecica", "D\u0103buleni", "Bolintin-Vale", "Rovinari", "Comarnic", "V\u0103lenii de Munte", "S\xE2nnicolau Mare", "D\u0103rm\u0103ne\u0219ti", "Moldova Nou\u0103", "T\xE2rgu L\u0103pu\u0219", "S\u0103cueni", "Videle", "Scornice\u0219ti", "Bolde\u0219ti-Sc\u0103eni", "S\xE2ntana", "T\xE2rgu Ocna", "M\u0103gurele", "C\u0103lan", "Beclean", "\u021A\u0103nd\u0103rei", "Sovata", "Oravi\u021Ba", "Jibou", "Urla\u021Bi", "H\xE2rl\u0103u", "Beiu\u0219", "Ianca", "Jimbolia", "Topoloveni", "Dr\u0103g\u0103ne\u0219ti-Olt", "Sinaia", "Nehoiu", "Covasna", "Negre\u0219ti-Oa\u0219", "Strehaia", "Dolhasca", "Or\u0219ova", "Valea lui Mihai", "Murfatlar", "Ale\u0219d", "Darabani", "Cristuru Secuiesc", "Fl\u0103m\xE2nzi", "M\u0103r\u0103\u0219e\u0219ti", "S\xE2ngeorz-B\u0103i", "Liteni", "T\xE2rgu Frumos", "Titu", "Ha\u021Beg", "O\u021Belu Ro\u0219u", "Ineu", "N\u0103s\u0103ud", "Huedin", "Odobe\u0219ti", "H\xE2r\u0219ova", "Bumbe\u0219ti-Jiu", "Seini", "Salcea", "Podu Iloaiei", "Eforie", "Uricani", "Baraolt", "Bu\u0219teni", "T\u0103\u0219nad", "Iernut", "Agnita", "Babadag", "B\u0103beni", "T\xE2rgu C\u0103rbune\u0219ti", "Negre\u0219ti", "Reca\u0219", "Siret", "M\u0103cin", "Chi\u0219ineu-Cri\u0219", "Plopeni", "Mih\u0103ile\u0219ti", "\u0218omcuta Mare", "Fieni", "\xCEntorsura Buz\u0103ului", "C\u0103lim\u0103ne\u0219ti", "Panciu", "N\u0103dlac", "Zlatna", "P\u0103t\xE2rlagele", "Cehu Silvaniei", "Amara", "Bude\u0219ti", "Anina", "Dumbr\u0103veni", "C\xE2mpeni", "Pogoanele", "T\u0103u\u021Bii-M\u0103gher\u0103u\u0219", "Tismana", "Curtici", "Techirghiol", "S\u0103rma\u0219u", "Vl\u0103hi\u021Ba", "Cajvana", "S\u0103veni", "Segarcea", "P\xE2ncota", "R\u0103cari", "F\u0103get", "T\u0103lmaciu", "Buzia\u0219", "Fundulea", "Murgeni", "Teiu\u0219", "\xCEnsur\u0103\u021Bei", "Bicaz", "T\xE2rgu Bujor", "\u0218tei", "Lehliu Gar\u0103", "Horezu", "Deta", "Sl\u0103nic", "Piatra-Olt", "Ardud", "B\u0103lan", "Sebi\u0219", "Brezoi", "Potcoava", "G\u0103taia", "Novaci", "Miercurea Nirajului", "Baia de Aram\u0103", "Cop\u0219a Mic\u0103", "V\xE2nju Mare", "S\xE2ngeorgiu de P\u0103dure", "Geoagiu", "S\u0103li\u0219te", "Ciacova", "Rupea", "Mili\u0219\u0103u\u021Bi", "Isaccea", "Abrud", "Fierbin\u021Bi-T\xE2rg", "Cavnic", "S\u0103li\u0219tea de Sus", "B\u0103ile Herculane", "B\u0103lce\u0219ti", "Berbe\u0219ti", "Ghimbav", "Predeal", "\u021Aicleni", "Azuga", "Aninoasa", "Bucecea", "B\u0103ile Ol\u0103ne\u0219ti", "Sl\u0103nic Moldova", "Miercurea Sibiului", "Sulina", "Baia de Arie\u0219", "F\u0103urei", "Ocna Sibiului", "Bechet", "C\u0103z\u0103ne\u0219ti", "Ocnele Mari", "Bere\u0219ti", "Borsec", "B\u0103ile Govora", "Va\u0219c\u0103u", "Nucet", "Solca", "B\u0103ile Tu\u0219nad"];