"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var l = Object.defineProperty;
var j = Object.getOwnPropertyDescriptor;
var o = Object.getOwnPropertyNames;
var k = Object.prototype.hasOwnProperty;
var d = function d(n, a) {
    for (var e in a) l(n, e, {
      get: a[e],
      enumerable: !0
    });
  },
  t = function t(n, a, e, r) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(o(a)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !k.call(n, i) && i !== e && l(n, i, {
            get: function get() {
              return a[i];
            },
            enumerable: !(r = j(a, i)) || r.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var M = function M(n) {
  return t(l({}, "__esModule", {
    value: !0
  }), n);
};
var D = {};
d(D, {
  "default": function _default() {
    return S;
  }
});
module.exports = M(D);
var S = ["Adrijana", "Aleksandra", "Ana", "Anabela", "Anastasija", "Andrea", "Andrijana", "Aneta", "Anica", "Anita", "Anja", "Anka", "An\u0111ela", "Ava", "Biljana", "Bisenija", "Blagica", "Bobana", "Bogdana", "Bojana", "Bora", "Borka", "Bosiljka", "Bo\u017Eena", "Bo\u017Eica", "Branka", "Brankica", "Ceca", "Dajana", "Daliborka", "Damjanka", "Dana", "Danijela", "Danila", "Danka", "Darija", "Darinka", "Dejana", "Desanka", "Dijana", "Divna", "Dobrila", "Dorotea", "Draga", "Dragana", "Draginja", "Drina", "Dubravka", "Dunja", "Du\u0161anka", "Du\u0161ica", "Du\u0161ka", "Elena", "Eleonora", "Ema", "Emilija", "Evdokija", "Gabrijela", "Gala", "Galina", "Gorana", "Gordana", "Hana", "Ilinka", "Ina", "Irina", "Ivanka", "Jadranka", "Jana", "Jasmina", "Jasna", "Jelena", "Jelica", "Jelisaveta", "Jelka", "Jevrosima", "Jovana", "Jovanka", "Julia", "Julijana", "Katarina", "Klara", "Kristina", "Ksenija", "Lada", "Lara", "Leposava", "Lidija", "Ljiljana", "Ljuba", "Ljubica", "Magdalena", "Maja", "Malina", "Marica", "Marina", "Markika", "Marta", "Ma\u0161a", "Ma\u0161inka", "Melenija", "Mia", "Milana", "Milanka", "Milena", "Milica", "Miljana", "Mina", "Mira", "Mirela", "Mirjana", "Mirka", "Mirna", "Mitra", "Mla\u0111ana", "Momira", "Nada", "Nade\u017Eda", "Nastja", "Natalija", "Nata\u0161a", "Na\u0111a", "Neda", "Nela", "Neva", "Nevena", "Nikoleta", "Nikolina", "Nina", "Njegomirka", "Ognjana", "Olga", "Olgica", "Olivera", "Peruna", "Petra", "Petrija", "Radina", "Radmila", "Radojka", "Rakita", "Renja", "Ristana", "Roksana", "Romana", "Rumena", "Ru\u017Ea", "Sanda", "Sandra", "Sanja", "Sara", "Selena", "Senka", "Silvija", "Simonida", "Slava", "Slavica", "Slavka", "Sla\u0111ana", "Slobodanka", "Smiljana", "Sne\u017Eana", "Sofija", "Sonja", "Srna", "Stanislava", "Sta\u0161a", "Stefana", "Stojanka", "Sun\u010Dica", "Suzana", "Svetlana", "Tamara", "Tanja", "Tara", "Tatjana", "Tea", "Teodora", "Teona", "Una", "Vasilisa", "Vera", "Verica", "Veselinka", "Vesna", "Vida", "Vi\u0161nja", "Vladana", "Vlatka", "Vojislava", "Vujica", "Vukica", "Zavida", "Zora", "Zorana", "Zorka", "Zvezdana", "\u010Carna", "\u0110urica", "\u017Deljka"];