"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var n = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var r = Object.getOwnPropertyNames;
var k = Object.prototype.hasOwnProperty;
var t = function t(e, a) {
    for (var l in a) n(e, l, {
      get: a[l],
      enumerable: !0
    });
  },
  d = function d(e, a, l, s) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(r(a)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !k.call(e, i) && i !== l && n(e, i, {
            get: function get() {
              return a[i];
            },
            enumerable: !(s = u(a, i)) || s.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var v = function v(e) {
  return d(n({}, "__esModule", {
    value: !0
  }), e);
};
var g = {};
t(g, {
  "default": function _default() {
    return S;
  }
});
module.exports = v(g);
var S = ["Aina\u017Ei", "Aizkraukle", "Aizpute", "Akn\u012Bste", "Aloja", "Al\u016Bksne", "Ape", "Auce", "Baldone", "Balo\u017Ei", "Balvi", "Bauska", "Broc\u0113ni", "C\u0113sis", "Cesvaine", "Dagda", "Daugavpils", "Dobele", "Durbe", "Grobi\u0146a", "Gulbene", "Ik\u0161\u0137ile", "Il\u016Bkste", "Jaunjelgava", "J\u0113kabpils", "Jelgava", "J\u016Brmala", "Kandava", "K\u0101rsava", "Kr\u0101slava", "Kuld\u012Bga", "\u0136egums", "Lielv\u0101rde", "Liep\u0101ja", "L\u012Bgatne", "Limba\u017Ei", "L\u012Bv\u0101ni", "Lub\u0101na", "Ludza", "Madona", "Mazsalaca", "Ogre", "Olaine", "P\u0101vilosta", "Piltene", "P\u013Cavi\u0146as", "Prei\u013Ci", "Priekule", "R\u0113zekne", "R\u012Bga", "R\u016Bjiena", "Sabile", "Salacgr\u012Bva", "Salaspils", "Saldus", "Saulkrasti", "Seda", "Sigulda", "Skrunda", "Smiltene", "Staicele", "Stende", "Stren\u010Di", "Subate", "Talsi", "Tukums", "Valdem\u0101rpils", "Valka", "Valmiera", "Vanga\u017Ei", "Varak\u013C\u0101ni", "Ventspils", "Vies\u012Bte", "Vi\u013Caka", "Vi\u013C\u0101ni", "Zilupe"];