"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformNumbersReply = exports.transformRedisJsonNullReply = exports.transformRedisJsonReply = exports.transformRedisJsonArgument = void 0;
var ARRAPPEND = require("./ARRAPPEND");
var ARRINDEX = require("./ARRINDEX");
var ARRINSERT = require("./ARRINSERT");
var ARRLEN = require("./ARRLEN");
var ARRPOP = require("./ARRPOP");
var ARRTRIM = require("./ARRTRIM");
var DEBUG_MEMORY = require("./DEBUG_MEMORY");
var DEL = require("./DEL");
var FORGET = require("./FORGET");
var GET = require("./GET");
var MGET = require("./MGET");
var NUMINCRBY = require("./NUMINCRBY");
var NUMMULTBY = require("./NUMMULTBY");
var OBJKEYS = require("./OBJKEYS");
var OBJLEN = require("./OBJLEN");
var RESP = require("./RESP");
var SET = require("./SET");
var STRAPPEND = require("./STRAPPEND");
var STRLEN = require("./STRLEN");
var TYPE = require("./TYPE");
exports["default"] = {
  ARRAPPEND: ARRAPPEND,
  arrAppend: ARRAPPEND,
  ARRINDEX: ARRINDEX,
  arrIndex: ARRINDEX,
  ARRINSERT: ARRINSERT,
  arrInsert: ARRINSERT,
  ARRLEN: ARRLEN,
  arrLen: ARRLEN,
  ARRPOP: ARRPOP,
  arrPop: ARRPOP,
  ARRTRIM: ARRTRIM,
  arrTrim: ARRTRIM,
  DEBUG_MEMORY: DEBUG_MEMORY,
  debugMemory: DEBUG_MEMORY,
  DEL: DEL,
  del: DEL,
  FORGET: FORGET,
  forget: FORGET,
  GET: GET,
  get: GET,
  MGET: MGET,
  mGet: MGET,
  NUMINCRBY: NUMINCRBY,
  numIncrBy: NUMINCRBY,
  NUMMULTBY: NUMMULTBY,
  numMultBy: NUMMULTBY,
  OBJKEYS: OBJKEYS,
  objKeys: OBJKEYS,
  OBJLEN: OBJLEN,
  objLen: OBJLEN,
  RESP: RESP,
  resp: RESP,
  SET: SET,
  set: SET,
  STRAPPEND: STRAPPEND,
  strAppend: STRAPPEND,
  STRLEN: STRLEN,
  strLen: STRLEN,
  TYPE: TYPE,
  type: TYPE
};
function transformRedisJsonArgument(json) {
  return JSON.stringify(json);
}
exports.transformRedisJsonArgument = transformRedisJsonArgument;
function transformRedisJsonReply(json) {
  return JSON.parse(json);
}
exports.transformRedisJsonReply = transformRedisJsonReply;
function transformRedisJsonNullReply(json) {
  if (json === null) return null;
  return transformRedisJsonReply(json);
}
exports.transformRedisJsonNullReply = transformRedisJsonNullReply;
function transformNumbersReply(reply) {
  return JSON.parse(reply);
}
exports.transformNumbersReply = transformNumbersReply;