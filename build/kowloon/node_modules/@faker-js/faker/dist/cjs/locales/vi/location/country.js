"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var e = Object.defineProperty;
var u = Object.getOwnPropertyDescriptor;
var t = Object.getOwnPropertyNames;
var l = Object.prototype.hasOwnProperty;
var g = function g(n, a) {
    for (var o in a) e(n, o, {
      get: a[o],
      enumerable: !0
    });
  },
  h = function h(n, a, o, r) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(t(a)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !l.call(n, i) && i !== o && e(n, i, {
            get: function get() {
              return a[i];
            },
            enumerable: !(r = u(a, i)) || r.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var s = function s(n) {
  return h(e({}, "__esModule", {
    value: !0
  }), n);
};
var m = {};
g(m, {
  "default": function _default() {
    return c;
  }
});
module.exports = s(m);
var c = ["Afghanistan", "Ai C\u1EADp", "Albania", "Alg\xE9rie", "Andorra", "Angola", "V\u01B0\u01A1ng qu\u1ED1c Li\xEAn hi\u1EC7p Anh v\xE0 B\u1EAFc Ireland", "Antigua v\xE0 Barbuda", "\xC1o", "\u1EA2 R\u1EADp X\xEA \xDAt", "Argentina", "Armenia", "Azerbaijan", "\u1EA4n \u0110\u1ED9", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belize", "B\xE9nin", "Bhutan", "B\u1EC9", "Bolivia", "Bosna v\xE0 Hercegovina", "Botswana", "B\u1ED3 \u0110\xE0o Nha", "B\u1EDD Bi\u1EC3n Ng\xE0", "Brasil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "C\xE1c Ti\u1EC3u V\u01B0\u01A1ng qu\u1ED1c \u1EA2 R\u1EADp Th\u1ED1ng nh\u1EA5t", "Cameroon", "Campuchia", "Canada", "Chile", "Colombia", "Comoros", "C\u1ED9ng h\xF2a Congo", "C\u1ED9ng h\xF2a D\xE2n ch\u1EE7 Congo", "Costa Rica", "Croatia", "Cuba", "Djibouti", "Dominica", "C\u1ED9ng h\xF2a Dominica", "\u0110an M\u1EA1ch", "\u0110\xF4ng Timor", "\u0110\u1EE9c", "Ecuador", "El Salvador", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Gabon", "Gambia", "Ghana", "Grenada", "Gruzia", "Guatemala", "Guin\xE9-Bissau", "Guinea X\xEDch \u0110\u1EA1o", "Guin\xE9e", "Guyana", "Haiti", "H\xE0 Lan", "H\xE0n Qu\u1ED1c", "Hoa K\u1EF3", "Honduras", "Hungary", "Hy L\u1EA1p", "Iceland", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Jamaica", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kosovo", "Kuwait", "Kyrgyzstan", "L\xE0o", "Latvia", "Lesotho", "Liban", "Liberia", "Libya", "Liechtenstein", "Litva", "Luxembourg", "Macedonia", "Madagascar", "Malaysia", "Mali", "Malta", "Maroc", "Qu\u1EA7n \u0111\u1EA3o Marshall", "Mauritanie", "Mauritius", "M\xE9xico", "Micronesia", "Moldova", "Monaco", "M\xF4ng C\u1ED5", "Montenegro", "Mozambique", "Myanmar", "Namibia", "Nam Sudan", "Nam Phi", "Nauru", "Na Uy", "Nepal", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Nga", "Nh\u1EADt B\u1EA3n", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Ph\xE1p", "Ph\u1EA7n Lan", "Philippines", "Qatar", "Rom\xE2nia", "Rwanda", "Saint Kitts v\xE0 Nevis", "Saint Lucia", "Saint Vincent v\xE0 Grenadines", "Samoa", "San Marino", "S\xE3o Tom\xE9 v\xE0 Pr\xEDncipe", "S\xE9c", "S\xE9n\xE9gal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "S\xEDp", "Slovakia", "Slovenia", "Solomon", "Somalia", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Syria", "Tajikistan", "Tanzania", "T\xE2y Ban Nha", "Tchad", "Th\xE1i Lan", "Th\u1ED5 Nh\u0129 K\u1EF3", "Th\u1EE5y \u0110i\u1EC3n", "Th\u1EE5y S\u0129", "Togo", "Tonga", "Tri\u1EC1u Ti\xEAn", "Trinidad v\xE0 Tobago", "Trung Qu\u1ED1c", "Trung Phi", "Tunisia", "Turkmenistan", "Tuvalu", "\xDAc", "Uganda", "Ukraina", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican", "Venezuela", "Vi\u1EC7t Nam", "\xDD", "Yemen", "Zambia", "Zimbabwe"];