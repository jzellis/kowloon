"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInnerHTML = getInnerHTML;
exports.getOuterHTML = getOuterHTML;
exports.getText = getText;
exports.innerText = innerText;
exports.textContent = textContent;
var _domhandler = require("domhandler");
var _domSerializer = _interopRequireDefault(require("dom-serializer"));
var _domelementtype = require("domelementtype");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the outer HTML of.
 * @param options Options for serialization.
 * @returns `node`'s outer HTML.
 */
function getOuterHTML(node, options) {
  return (0, _domSerializer["default"])(node, options);
}
/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the inner HTML of.
 * @param options Options for serialization.
 * @returns `node`'s inner HTML.
 */
function getInnerHTML(node, options) {
  return (0, _domhandler.hasChildren)(node) ? node.children.map(function (node) {
    return getOuterHTML(node, options);
  }).join("") : "";
}
/**
 * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.
 *
 * @category Stringify
 * @deprecated Use `textContent` instead.
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 */
function getText(node) {
  if (Array.isArray(node)) return node.map(getText).join("");
  if ((0, _domhandler.isTag)(node)) return node.name === "br" ? "\n" : getText(node.children);
  if ((0, _domhandler.isCDATA)(node)) return getText(node.children);
  if ((0, _domhandler.isText)(node)) return node.data;
  return "";
}
/**
 * Get a node's text content.
 *
 * @category Stringify
 * @param node Node to get the text content of.
 * @returns `node`'s text content.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}
 */
function textContent(node) {
  if (Array.isArray(node)) return node.map(textContent).join("");
  if ((0, _domhandler.hasChildren)(node) && !(0, _domhandler.isComment)(node)) {
    return textContent(node.children);
  }
  if ((0, _domhandler.isText)(node)) return node.data;
  return "";
}
/**
 * Get a node's inner text.
 *
 * @category Stringify
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}
 */
function innerText(node) {
  if (Array.isArray(node)) return node.map(innerText).join("");
  if ((0, _domhandler.hasChildren)(node) && (node.type === _domelementtype.ElementType.Tag || (0, _domhandler.isCDATA)(node))) {
    return innerText(node.children);
  }
  if ((0, _domhandler.isText)(node)) return node.data;
  return "";
}