"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var i = Object.defineProperty;
var n = Object.getOwnPropertyDescriptor;
var l = Object.getOwnPropertyNames;
var s = Object.prototype.hasOwnProperty;
var t = function t(o, a) {
    for (var r in a) i(o, r, {
      get: a[r],
      enumerable: !0
    });
  },
  m = function m(o, a, r, d) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(l(a)),
        _step;
      try {
        var _loop = function _loop() {
          var e = _step.value;
          !s.call(o, e) && e !== r && i(o, e, {
            get: function get() {
              return a[e];
            },
            enumerable: !(d = n(a, e)) || d.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return o;
  };
var u = function u(o) {
  return m(i({}, "__esModule", {
    value: !0
  }), o);
};
var S = {};
t(S, {
  "default": function _default() {
    return v;
  }
});
module.exports = u(S);
var v = ["Abrantes", "Agualva-Cac\xE9m", "\xC1gueda", "Albufeira", "Alc\xE1cer do Sal", "Alcoba\xE7a", "Alfena", "Almada", "Almeirim", "Amadora", "Amarante", "Amora", "Anadia", "Angra do Hero\xEDsmo", "Aveiro", "Barcelos", "Barreiro", "Beja", "Braga", "Bragan\xE7a", "Caldas da Rainha", "C\xE2mara de Lobos", "Cani\xE7o", "Cantanhede", "Cartaxo", "Castelo Branco", "Chaves", "Coimbra", "Costa da Caparica", "Covilh\xE3", "Elvas", "Entroncamento", "Ermesinde", "Esmoriz", "Espinho", "Esposende", "Estarreja", "Estremoz", "\xC9vora", "Fafe", "Faro", "F\xE1tima", "Felgueiras", "Fi\xE3es", "Figueira da Foz", "Freamunde", "Funchal", "Fund\xE3o", "Gafanha da Nazar\xE9", "Gandra", "Gondomar", "Gouveia", "Guarda", "Guimar\xE3es", "Horta", "\xCDlhavo", "Lagoa", "Lagos", "Lamego", "Leiria", "Lisbon", "Lixa", "Loul\xE9", "Loures", "Lourosa", "Macedo de Cavaleiros", "Machico", "Maia", "Mangualde", "Marco de Canaveses", "Marinha Grande", "Matosinhos", "Mealhada", "M\xEAda", "Miranda do Douro", "Mirandela", "Montemor-o-Novo", "Montijo", "Moura", "Odivelas", "Olh\xE3o da Restaura\xE7\xE3o", "Oliveira de Azem\xE9is", "Oliveira do Bairro", "Oliveira do Hospital", "Our\xE9m", "Ovar", "Pa\xE7os de Ferreira", "Paredes", "Penafiel", "Peniche", "Peso da R\xE9gua", "Pinhel", "Pombal", "Ponta Delgada", "Ponte de Sor", "Portalegre", "Portim\xE3o", "Porto", "P\xF3voa de Santa Iria", "P\xF3voa de Varzim", "Praia da Vit\xF3ria", "Quarteira", "Queluz", "Rebordosa", "Reguengos de Monsaraz", "Ribeira Grande", "Rio Maior", "Rio Tinto", "Sabugal", "Sacav\xE9m", "Santa Comba D\xE3o", "Santa Cruz", "Santa Maria da Feira", "Santana", "Santar\xE9m", "Santiago do Cac\xE9m", "Santo Tirso", "S\xE3o Jo\xE3o da Madeira", "S\xE3o Mamede de Infesta", "S\xE3o Salvador de Lordelo", "Seia", "Seixal", "Serpa", "Set\xFAbal", "Silves", "Sines", "Tarouca", "Tavira", "Tomar", "Tondela", "Torres Novas", "Torres Vedras", "Trancoso", "Trofa", "Valbom", "Vale de Cambra", "Valongo", "Valpa\xE7os", "Vendas Novas", "Viana do Castelo", "Vila Baleira (a.k.a. Porto Santo)", "Vila do Conde", "Vila Franca de Xira", "Vila Nova de Famalic\xE3o", "Vila Nova de Foz C\xF4a", "Vila Nova de Gaia", "Vila Nova de Santo Andr\xE9", "Vila Real", "Vila Real de Santo Ant\xF3nio", "Viseu", "Vizela"];