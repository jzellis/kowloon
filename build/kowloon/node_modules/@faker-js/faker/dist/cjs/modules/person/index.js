"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var f = Object.defineProperty;
var k = Object.getOwnPropertyDescriptor;
var c = Object.getOwnPropertyNames;
var d = Object.prototype.hasOwnProperty;
var y = function y(n, r) {
    for (var e in r) f(n, e, {
      get: r[e],
      enumerable: !0
    });
  },
  g = function g(n, r, e, a) {
    if (r && _typeof(r) == "object" || typeof r == "function") {
      var _iterator = _createForOfIteratorHelper(c(r)),
        _step;
      try {
        var _loop = function _loop() {
          var t = _step.value;
          !d.call(n, t) && t !== e && f(n, t, {
            get: function get() {
              return r[t];
            },
            enumerable: !(a = k(r, t)) || a.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var x = function x(n) {
  return g(f({}, "__esModule", {
    value: !0
  }), n);
};
var _ = {};
y(_, {
  PersonModule: function PersonModule() {
    return o;
  },
  Sex: function Sex() {
    return m;
  }
});
module.exports = x(_);
var m = function (e) {
  return e.Female = "female", e.Male = "male", e;
}(m || {});
function l(n, r, e) {
  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
    a = _ref.generic,
    t = _ref.female,
    s = _ref.male;
  var i;
  switch (e) {
    case "female":
      i = t;
      break;
    case "male":
      i = s;
      break;
    default:
      i = a;
      break;
  }
  return i == null && (t != null && s != null ? i = n.helpers.arrayElement([t, s]) : i = a), r(i);
}
var o = /*#__PURE__*/function () {
  function o(r) {
    _classCallCheck(this, o);
    this.faker = r;
    var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(o.prototype)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var e = _step2.value;
        e === "constructor" || typeof this[e] != "function" || (this[e] = this[e].bind(this));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  _createClass(o, [{
    key: "firstName",
    value: function firstName(r) {
      var s;
      var _ref2 = (s = this.faker.rawDefinitions.person) != null ? s : {},
        e = _ref2.first_name,
        a = _ref2.female_first_name,
        t = _ref2.male_first_name;
      return l(this.faker, this.faker.helpers.arrayElement, r, {
        generic: e,
        female: a,
        male: t
      });
    }
  }, {
    key: "lastName",
    value: function lastName(r) {
      var h;
      var _ref3 = (h = this.faker.rawDefinitions.person) != null ? h : {},
        e = _ref3.last_name,
        a = _ref3.female_last_name,
        t = _ref3.male_last_name,
        s = _ref3.last_name_pattern,
        i = _ref3.male_last_name_pattern,
        p = _ref3.female_last_name_pattern;
      if (s != null || i != null || p != null) {
        var u = l(this.faker, this.faker.helpers.weightedArrayElement, r, {
          generic: s,
          female: p,
          male: i
        });
        return this.faker.helpers.fake(u);
      }
      return l(this.faker, this.faker.helpers.arrayElement, r, {
        generic: e,
        female: a,
        male: t
      });
    }
  }, {
    key: "middleName",
    value: function middleName(r) {
      var s;
      var _ref4 = (s = this.faker.rawDefinitions.person) != null ? s : {},
        e = _ref4.middle_name,
        a = _ref4.female_middle_name,
        t = _ref4.male_middle_name;
      return l(this.faker, this.faker.helpers.arrayElement, r, {
        generic: e,
        female: a,
        male: t
      });
    }
  }, {
    key: "fullName",
    value: function fullName() {
      var _this = this;
      var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _r$sex = r.sex,
        e = _r$sex === void 0 ? this.faker.helpers.arrayElement(["female", "male"]) : _r$sex,
        _r$firstName = r.firstName,
        a = _r$firstName === void 0 ? this.firstName(e) : _r$firstName,
        _r$lastName = r.lastName,
        t = _r$lastName === void 0 ? this.lastName(e) : _r$lastName,
        s = this.faker.helpers.weightedArrayElement(this.faker.definitions.person.name);
      return this.faker.helpers.mustache(s, {
        "person.prefix": function personPrefix() {
          return _this.prefix(e);
        },
        "person.firstName": function personFirstName() {
          return a;
        },
        "person.middleName": function personMiddleName() {
          return _this.middleName(e);
        },
        "person.lastName": function personLastName() {
          return t;
        },
        "person.suffix": function personSuffix() {
          return _this.suffix();
        }
      });
    }
  }, {
    key: "gender",
    value: function gender() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.gender);
    }
  }, {
    key: "sex",
    value: function sex() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.sex);
    }
  }, {
    key: "sexType",
    value: function sexType() {
      return this.faker.helpers.enumValue(m);
    }
  }, {
    key: "bio",
    value: function bio() {
      var r = this.faker.definitions.person.bio_pattern;
      return this.faker.helpers.fake(r);
    }
  }, {
    key: "prefix",
    value: function prefix(r) {
      var s;
      var _ref5 = (s = this.faker.rawDefinitions.person) != null ? s : {},
        e = _ref5.prefix,
        a = _ref5.female_prefix,
        t = _ref5.male_prefix;
      return l(this.faker, this.faker.helpers.arrayElement, r, {
        generic: e,
        female: a,
        male: t
      });
    }
  }, {
    key: "suffix",
    value: function suffix() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.suffix);
    }
  }, {
    key: "jobTitle",
    value: function jobTitle() {
      return "".concat(this.jobDescriptor(), " ").concat(this.jobArea(), " ").concat(this.jobType());
    }
  }, {
    key: "jobDescriptor",
    value: function jobDescriptor() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.title.descriptor);
    }
  }, {
    key: "jobArea",
    value: function jobArea() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.title.level);
    }
  }, {
    key: "jobType",
    value: function jobType() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.title.job);
    }
  }, {
    key: "zodiacSign",
    value: function zodiacSign() {
      return this.faker.helpers.arrayElement(this.faker.definitions.person.western_zodiac_sign);
    }
  }]);
  return o;
}();
0 && (module.exports = {
  PersonModule: PersonModule,
  Sex: Sex
});