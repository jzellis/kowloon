"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var j = Object.getOwnPropertyDescriptor;
var A = Object.getOwnPropertyNames;
var k = Object.prototype.hasOwnProperty;
var o = function o(n, a) {
    for (var e in a) r(n, e, {
      get: a[e],
      enumerable: !0
    });
  },
  d = function d(n, a, e, l) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(A(a)),
        _step;
      try {
        var _loop = function _loop() {
          var i = _step.value;
          !k.call(n, i) && i !== e && r(n, i, {
            get: function get() {
              return a[i];
            },
            enumerable: !(l = j(a, i)) || l.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return n;
  };
var t = function t(n) {
  return d(r({}, "__esModule", {
    value: !0
  }), n);
};
var M = {};
o(M, {
  "default": function _default() {
    return c;
  }
});
module.exports = t(M);
var c = ["Ada", "Adina", "Adriana", "Adrijana", "Agata", "Alemka", "Alenka", "Alisa", "Alka", "Alma", "Amalija", "Ana", "An\u010Dica", "Anamarija", "Anastazija", "Anci", "An\u010Di", "Ancica", "Anda", "An\u0111ela", "An\u0111elika", "An\u0111elina", "Andi", "Andrea", "Andreja", "Andrina", "Anesa", "Aneta", "Ani", "Anica", "Anja", "Anka", "Antea", "Antonija", "Asija", "Asja", "Bara", "Barbara", "Barica", "Beata", "Bela", "Biserka", "Borka", "Borna", "Bo\u017Eena", "Bo\u017Eica", "Branimira", "Branka", "Brankica", "Brigita", "Dada", "Dagmar", "Dalibora", "Daliborka", "Danica", "Danijela", "Danka", "Dara", "Darinka", "Dea", "\u0110ina", "Dona", "Donka", "Dora", "Dorana", "Dorica", "Draga", "Ela", "Eli", "Elka", "Evelin", "Ina", "Inga", "Inge", "Inja", "Inka", "Ita", "Iva", "Ivan\u010Dica", "Ivanka", "Ivica", "Ivna", "Jagica", "Jana", "Janica", "Janka", "Jasna", "Jela", "Jelica", "Je\u0161a", "Kata", "Kate", "Katica", "Katija", "Katina", "Kika", "Lara", "Laura", "Lea", "Lela", "Lena", "Leona", "Lola", "Maca", "Magda", "Maja", "Majda", "Manda", "Mara", "Mare", "Marena", "Marica", "Marta", "Ma\u0161a", "Mica", "Mika", "Mila", "Milica", "Milka", "Mima", "Mina", "Mira", "Mirka", "Naja", "Nana", "Natalija", "Nata\u0161a", "Natka", "Neda", "Nela", "Neli", "Nena", "Nera", "Nesa", "Neva", "Nevenka", "Nina", "Nu\u0161a", "Paulina", "Pava", "Pave", "Pavica", "Rajna", "Rija", "Rina", "Ru\u017Eica", "Sta\u0161a", "Tasa", "Teja", "Tija", "Tijana", "Tina", "Ton\u010Dica", "Tonija", "Tonka", "Vala", "Valera", "Vali", "Vela", "Velana", "Velina", "Vera", "Verica", "Vinka", "Zlatica", "Zlatka", "Darija", "Darina", "Divna", "Donata", "Doroteja", "Dragica", "Dubravka", "Dunja", "\u0110urda", "Edita", "Elena", "Ema", "Eva", "Gabrijela", "Goranka", "Gordana", "Grozdana", "Helena", "Hrvojka", "Ira", "Irena", "Irma", "Ivana", "Jadranka", "Jaga", "Jasmina", "Josipa", "Karmela", "Katarina", "Kristina", "Leda", "Leonida", "Lidija", "Ljiljana", "Ljubica", "Lovorka", "Lucija", "Magdalena", "Marija", "Marijana", "Marina", "Martina", "Miranda", "Mirna", "Monika", "Nada", "Nadalina", "Nedjeljka", "Nevena", "Nora", "Paula", "Petra", "Renata", "Romana", "Rosana", "Ru\u017Ea", "Sanja", "Silvija", "Slavica", "Snje\u017Eana", "Tereza", "Tomislava", "Valentina", "Valerija", "Vedrana", "Velimira", "Veronika", "Vesna", "Vladimira", "Zdenka", "Zdeslava", "Zlata"];