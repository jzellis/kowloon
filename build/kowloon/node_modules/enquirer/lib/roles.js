'use strict';

var utils = require('./utils');
var roles = {
  "default": function _default(prompt, choice) {
    return choice;
  },
  checkbox: function checkbox(prompt, choice) {
    throw new Error('checkbox role is not implemented yet');
  },
  editable: function editable(prompt, choice) {
    throw new Error('editable role is not implemented yet');
  },
  expandable: function expandable(prompt, choice) {
    throw new Error('expandable role is not implemented yet');
  },
  heading: function heading(prompt, choice) {
    choice.disabled = '';
    choice.indicator = [choice.indicator, ' '].find(function (v) {
      return v != null;
    });
    choice.message = choice.message || '';
    return choice;
  },
  input: function input(prompt, choice) {
    throw new Error('input role is not implemented yet');
  },
  option: function option(prompt, choice) {
    return roles["default"](prompt, choice);
  },
  radio: function radio(prompt, choice) {
    throw new Error('radio role is not implemented yet');
  },
  separator: function separator(prompt, choice) {
    choice.disabled = '';
    choice.indicator = [choice.indicator, ' '].find(function (v) {
      return v != null;
    });
    choice.message = choice.message || prompt.symbols.line.repeat(5);
    return choice;
  },
  spacer: function spacer(prompt, choice) {
    return choice;
  }
};
module.exports = function (name) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var role = utils.merge({}, roles, options.roles);
  return role[name] || role["default"];
};