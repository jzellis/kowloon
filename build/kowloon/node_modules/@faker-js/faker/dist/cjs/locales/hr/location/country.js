"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var t = Object.getOwnPropertyDescriptor;
var k = Object.getOwnPropertyNames;
var j = Object.prototype.hasOwnProperty;
var u = function u(i, a) {
    for (var e in a) r(i, e, {
      get: a[e],
      enumerable: !0
    });
  },
  l = function l(i, a, e, o) {
    if (a && _typeof(a) == "object" || typeof a == "function") {
      var _iterator = _createForOfIteratorHelper(k(a)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !j.call(i, n) && n !== e && r(i, n, {
            get: function get() {
              return a[n];
            },
            enumerable: !(o = t(a, n)) || o.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return i;
  };
var s = function s(i) {
  return l(r({}, "__esModule", {
    value: !0
  }), i);
};
var d = {};
u(d, {
  "default": function _default() {
    return v;
  }
});
module.exports = s(d);
var v = ["Afganistan", "Albanija", "Al\u017Eir", "Ameri\u010Dka Samoa", "Andora", "Angola", "Anguila", "Antarktika", "Antigua i Barbuda", "Argentina", "Armenija", "Aruba", "Australija", "Austrija", "Azerbajd\u017Ean", "Bahami", "Bahrein", "Banglade\u0161", "Barbados", "Bjelorusija", "Belgija", "Belize", "Benin", "Bermuda", "Butan", "Bolivija", "Bonaire", "Bosna i Hercegovina", "Bocvana", "Otok Bouvet", "Brazil", "Bruneji", "Bugarska", "Burikina Faso", "Burundi", "Kambod\u017Ea", "Kameron", "Kanada", "Zelenortska Republika", "Kajmanski Otoci", "Srednjoafri\u010Dka Republika", "\u010Cad", "\u010Cile", "Kina", "Bo\u017Ei\u0107ni Otoci", "Keeling Otoci", "Kolumbija", "Komori", "Kongo", "Demokratska Republika Kongo", "Cookovi Otoci", "Kostarika", "Hrvatska", "Kuba", "Curacao", "Cipar", "\u010Ce\u0161ka", "Obala Bjelokosti", "Danska", "D\u017Eibuti", "Dominika", "Dominikanska Republika", "Ekvador", "Egipat", "Salvador", "Ekvatorijalna Gvineja", "Eritreja", "Estonija", "Etiopija", "Falkandski Otoci", "Farski Otoci", "Fid\u017Ei", "Finska", "Francuska", "Francuska Gvajana", "Francuska Polinezija", "Ju\u017Eni Francuski Teritoriji", "Gabon", "Gambija", "Gruzija", "Njema\u010Dka", "Gana", "Gibraltar", "Gr\u010Dka", "Grenland", "Grenada", "Guadelupe", "Guam", "Guatemala", "Guernsey", "Gvineja", "Gvineja Bisau", "Gvajana", "Haiti", "Otok Heard i McDonald Otoci", "Vatikan", "Honduras", "Hong Kong", "Ma\u0111arska", "Island", "Indija", "Indonezija", "Iran", "Irak", "Irska", "Isle of Man", "Izrael", "Italija", "Jamajka", "Japan", "Jersey", "Jordan", "Kazahstan", "Kenija", "Kiribati", "DNR Koreja", "Rebublika Koreja", "Kuvajt", "Krigistan", "Laos", "Latvija", "Libanon", "Lesoto", "Liberija", "Libija", "Lihten\u0161tajn", "Litva", "Luksmburg", "Makao", "Makedonija", "Madagaskar", "Malavi", "Malezija", "Maldivi", "Mali", "Malta", "Mar\u0161alovi", "Martinik", "Mauritanija", "Mauricius", "Mayotte", "Meksiko", "Mikronezija", "Moldavija", "Monako", "Mongolija", "Crna Gora", "Monteserat", "Maroko", "Mozambik", "Mjanmar", "Namibija", "Nauru", "Nepal", "Nizozemska", "Nova Kaledonija", "Novi Zeland", "Nikaragva", "Niger", "Nigerija", "Niue", "Norfolk", "Sjeverni Marijanski Otoci", "Norve\u0161ka", "Oman", "Pakistan", "Palau", "Palestina", "Panama", "Papua Nova Gvineja", "Paragvaj", "Peur", "Filipini", "Pitcairn", "Poljska", "Protugal", "Portoriko", "Katar", "Rumunjska", "Ruska Federacija", "Ruanda", "Reunion", "Sveti Bartolomej", "Sveta Helena", "Sveti Kitts i Nevis", "Sveta Lucija", "Sveti Martin (fr.dio)", "Sveti Petar i Miquelon", "Sveti Vincent i Grenadini", "Samoa", "San Marino", "Sveti Toma i Princip", "Saudijska Arabija", "Senegal", "Srbija", "Sej\u0161eli", "Siera Leone", "Singapur", "Sveti Martin (niz.dio)", "Slova\u010Dka", "Slovenija", "Salomoski Otoci", "Somalija", "Ju\u017Ena Afrika", "Ju\u017Ena Georgia i ju\u017Eni Sandwich", "Ju\u017Eni Sudan", "\u0160panjolska", "\u0160ri Lanka", "Sudan", "Surinam", "Svalvard i Jan Mayen", "Swaziland", "\u0160vedska", "\u0160vicarska", "Sirija", "Tajvan", "Tad\u017Eikistan", "Tanaznija", "Tajland", "Isto\u010Dni Timor", "Togo", "Tokelau", "Tonga", "Trinidad i Tobago", "Tunis", "Turska", "Turkmenistan", "Otoci Turks i Caicos", "Tuvalu", "Uganda", "Ukrajina", "Ujedinjeni Arapski Emirati ", "Ujedinjeno Kraljevstvo", "Sjedinjenje Ameri\u010Dke Dr\u017Eave", "Urugvaj", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Britanski Djevi\u010Danski Otoci", "Ameri\u010Dki Djevi\u010Danski Otoci", "Wallis i Futuna", "Zapadna Sahara", "Jemen", "Zambija", "Zimbabve"];