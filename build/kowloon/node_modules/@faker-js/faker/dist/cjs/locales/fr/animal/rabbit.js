"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var o = Object.getOwnPropertyDescriptor;
var d = Object.getOwnPropertyNames;
var s = Object.prototype.hasOwnProperty;
var t = function t(a, e) {
    for (var i in e) r(a, i, {
      get: e[i],
      enumerable: !0
    });
  },
  u = function u(a, e, i, l) {
    if (e && _typeof(e) == "object" || typeof e == "function") {
      var _iterator = _createForOfIteratorHelper(d(e)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !s.call(a, n) && n !== i && r(a, n, {
            get: function get() {
              return e[n];
            },
            enumerable: !(l = o(e, n)) || l.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return a;
  };
var h = function h(a) {
  return u(r({}, "__esModule", {
    value: !0
  }), a);
};
var b = {};
t(b, {
  "default": function _default() {
    return p;
  }
});
module.exports = h(b);
var p = ["Alaska", "Angora fran\xE7ais", "Argent\xE9 de Champagne", "Argent\xE9 de Saint Hubert", "B\xE9lier anglais", "B\xE9lier fran\xE7ais", "Blanc de Hotot", "Blanc de Vend\xE9e", "Bleu de Beveren", "Bleu de Vienne", "Brun marron de Lorraine", "Californien", "Castorrex", "Chamois de Thuringe", "Fauve de Bourgogne", "Feh de Marbourg", "Feu Feh", "Feu havane", "Feu noir", "G\xE9ant blanc du Bouscat", "G\xE9ant des Flandres", "G\xE9ant papillon fran\xE7ais", "Grand Chinchilla", "Grand Russe", "Gris bleu de Vienne", "Gris de Vienne", "Gris du Bourbonnais", "Havane fran\xE7ais", "Hermine de Lutterbach", "Hollandais", "Japonais", "lapin b\xE9lier", "Lapin blanc danois", "Lapin ch\xE8vre", "Lapin chinchilla", "Li\xE8vre belge", "Lynx", "Nain angora", "Nain b\xE9lier Rex", "Nain de couleur", "Nain renard", "Nain Rex", "Nain satin", "N\xE9o-Z\xE9landais", "Noir de Vienne", "Normand", "Papillon anglais", "Papillon rh\xE9nan", "Perlfeh", "Petit b\xE9lier", "Petit papillon", "Polonais", "Renard", "Rex", "Rhoen", "Russe", "Sabl\xE9 des Vosges", "Satin", "Separator", "Zibeline"];