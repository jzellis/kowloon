"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
var r = Object.defineProperty;
var f = Object.getOwnPropertyDescriptor;
var u = Object.getOwnPropertyNames;
var d = Object.prototype.hasOwnProperty;
var a = function a(h, t) {
    for (var i in t) r(h, i, {
      get: t[i],
      enumerable: !0
    });
  },
  g = function g(h, t, i, s) {
    if (t && _typeof(t) == "object" || typeof t == "function") {
      var _iterator = _createForOfIteratorHelper(u(t)),
        _step;
      try {
        var _loop = function _loop() {
          var n = _step.value;
          !d.call(h, n) && n !== i && r(h, n, {
            get: function get() {
              return t[n];
            },
            enumerable: !(s = f(t, n)) || s.enumerable
          });
        };
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return h;
  };
var b = function b(h) {
  return g(r({}, "__esModule", {
    value: !0
  }), h);
};
var o = {};
a(o, {
  "default": function _default() {
    return m;
  }
});
module.exports = b(o);
var m = /*#__PURE__*/function () {
  function m() {
    _classCallCheck(this, m);
    this.N = 624;
    this.M = 397;
    this.MATRIX_A = 2567483615;
    this.UPPER_MASK = 2147483648;
    this.LOWER_MASK = 2147483647;
    this.mt = new Array(this.N);
    this.mti = this.N + 1;
    this.mag01 = [0, this.MATRIX_A];
  }
  _createClass(m, [{
    key: "unsigned32",
    value: function unsigned32(t) {
      return t < 0 ? (t ^ this.UPPER_MASK) + this.UPPER_MASK : t;
    }
  }, {
    key: "subtraction32",
    value: function subtraction32(t, i) {
      return t < i ? this.unsigned32(4294967296 - (i - t) & 4294967295) : t - i;
    }
  }, {
    key: "addition32",
    value: function addition32(t, i) {
      return this.unsigned32(t + i & 4294967295);
    }
  }, {
    key: "multiplication32",
    value: function multiplication32(t, i) {
      var s = 0;
      for (var n = 0; n < 32; ++n) t >>> n & 1 && (s = this.addition32(s, this.unsigned32(i << n)));
      return s;
    }
  }, {
    key: "initGenrand",
    value: function initGenrand(t) {
      for (this.mt[0] = this.unsigned32(t & 4294967295), this.mti = 1; this.mti < this.N; this.mti++) this.mt[this.mti] = this.addition32(this.multiplication32(1812433253, this.unsigned32(this.mt[this.mti - 1] ^ this.mt[this.mti - 1] >>> 30)), this.mti), this.mt[this.mti] = this.unsigned32(this.mt[this.mti] & 4294967295);
    }
  }, {
    key: "initByArray",
    value: function initByArray(t, i) {
      this.initGenrand(19650218);
      var s = 1,
        n = 0,
        e = this.N > i ? this.N : i;
      for (; e; e--) this.mt[s] = this.addition32(this.addition32(this.unsigned32(this.mt[s] ^ this.multiplication32(this.unsigned32(this.mt[s - 1] ^ this.mt[s - 1] >>> 30), 1664525)), t[n]), n), this.mt[s] = this.unsigned32(this.mt[s] & 4294967295), s++, n++, s >= this.N && (this.mt[0] = this.mt[this.N - 1], s = 1), n >= i && (n = 0);
      for (e = this.N - 1; e; e--) this.mt[s] = this.subtraction32(this.unsigned32(this.mt[s] ^ this.multiplication32(this.unsigned32(this.mt[s - 1] ^ this.mt[s - 1] >>> 30), 1566083941)), s), this.mt[s] = this.unsigned32(this.mt[s] & 4294967295), s++, s >= this.N && (this.mt[0] = this.mt[this.N - 1], s = 1);
      this.mt[0] = 2147483648;
    }
  }, {
    key: "genrandInt32",
    value: function genrandInt32() {
      var t;
      if (this.mti >= this.N) {
        var i;
        for (this.mti === this.N + 1 && this.initGenrand(5489), i = 0; i < this.N - this.M; i++) t = this.unsigned32(this.mt[i] & this.UPPER_MASK | this.mt[i + 1] & this.LOWER_MASK), this.mt[i] = this.unsigned32(this.mt[i + this.M] ^ t >>> 1 ^ this.mag01[t & 1]);
        for (; i < this.N - 1; i++) t = this.unsigned32(this.mt[i] & this.UPPER_MASK | this.mt[i + 1] & this.LOWER_MASK), this.mt[i] = this.unsigned32(this.mt[i + (this.M - this.N)] ^ t >>> 1 ^ this.mag01[t & 1]);
        t = this.unsigned32(this.mt[this.N - 1] & this.UPPER_MASK | this.mt[0] & this.LOWER_MASK), this.mt[this.N - 1] = this.unsigned32(this.mt[this.M - 1] ^ t >>> 1 ^ this.mag01[t & 1]), this.mti = 0;
      }
      return t = this.mt[this.mti++], t = this.unsigned32(t ^ t >>> 11), t = this.unsigned32(t ^ t << 7 & 2636928640), t = this.unsigned32(t ^ t << 15 & 4022730752), t = this.unsigned32(t ^ t >>> 18), t;
    }
  }, {
    key: "genrandInt31",
    value: function genrandInt31() {
      return this.genrandInt32() >>> 1;
    }
  }, {
    key: "genrandReal1",
    value: function genrandReal1() {
      return this.genrandInt32() * (1 / 4294967295);
    }
  }, {
    key: "genrandReal2",
    value: function genrandReal2() {
      return this.genrandInt32() * (1 / 4294967296);
    }
  }, {
    key: "genrandReal3",
    value: function genrandReal3() {
      return (this.genrandInt32() + .5) * (1 / 4294967296);
    }
  }, {
    key: "genrandRes53",
    value: function genrandRes53() {
      var t = this.genrandInt32() >>> 5,
        i = this.genrandInt32() >>> 6;
      return (t * 67108864 + i) * (1 / 9007199254740992);
    }
  }]);
  return m;
}();